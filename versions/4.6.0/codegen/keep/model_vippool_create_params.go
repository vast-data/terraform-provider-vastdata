/*
 * VAST API Swagger Schema
 *
 * VAST Management API definition
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type VippoolCreateParams struct {
	// 
	Name string `json:"name,omitempty"`
	// The IP address at the start of a continuous range
	StartIp string `json:"start_ip,omitempty"`
	// The IP address at the end of the range
	EndIp string `json:"end_ip,omitempty"`
	// The subnet expressed as a CIDR index (number of bits in each IP that belong to the subnet)
	SubnetCidr int32 `json:"subnet_cidr,omitempty"`
	// The subnet expressed as a CIDR index (number of bits in each IP that belong to the subnet)
	SubnetCidrIpv6 int32 `json:"subnet_cidr_ipv6,omitempty"`
	// To tag the VIP pool with a specific VLAN on the data network, specify the VLAN (0-4096).
	Vlan int32 `json:"vlan,omitempty"`
	// The IP address of a local gateway device if client traffic is routed through one
	GwIp string `json:"gw_ip,omitempty"`
	// The IP address of a local gateway device if client traffic is routed through one
	GwIpv6 string `json:"gw_ipv6,omitempty"`
	// To dedicate a specific group of CNodes to the VIP pool, list the IDs of the CNodes.
	CnodeIds string `json:"cnode_ids,omitempty"`
	// list of cnode names
	CnodeNames string `json:"cnode_names,omitempty"`
	// 
	ClusterId int32 `json:"cluster_id,omitempty"`
	// Domain name for the VAST DNS server. The domain suffix defined in the DNS server configuration is appended to this domain name to form a FQDN which the DNS server resolves to this VIP pool.
	DomainName string `json:"domain_name,omitempty"`
	// 'Protocol' dedicates the VIP pool for client access. 'Replication' dedicates the VIP pool for native replication
	Role string `json:"role,omitempty"`
	// Array of IP ranges to include in the vippool.
	IpRanges [][]string `json:"ip_ranges,omitempty"`
	// Tenant ID
	TenantId int32 `json:"tenant_id,omitempty"`
	// If true, CNodes participating in the vip pool are preferred in VMS host election
	VmsPreferred bool `json:"vms_preferred,omitempty"`
	// True for enable, False for disable
	Enabled bool `json:"enabled,omitempty"`
	// The port on the CNode this pool will use. Right, left or all
	PortMembership string `json:"port_membership,omitempty"`
	// 
	EnableL3 bool `json:"enable_l3,omitempty"`
	// 
	VastAsn int32 `json:"vast_asn,omitempty"`
	// 
	PeerAsn int32 `json:"peer_asn,omitempty"`
}
