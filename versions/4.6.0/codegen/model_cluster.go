/*
 * VAST API Swagger Schema
 *
 * VAST Management API definition
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type Cluster struct {
	// 
	Id int32 `json:"id,omitempty"`
	// 
	AvailableUpgradeVersion *interface{} `json:"available_upgrade_version,omitempty"`
	// if enabled VMS will enable turbo boost during upgrade
	TurboBoostFlag *interface{} `json:"turbo_boost_flag,omitempty"`
	// 
	S3NewVersion *interface{} `json:"s3_new_version,omitempty"`
	// 
	Guid string `json:"guid,omitempty"`
	// Cluster Leader IP address
	Ip string `json:"ip,omitempty"`
	// Management VIP
	MgmtVip string `json:"mgmt_vip,omitempty"`
	// Management CNode
	MgmtCnode string `json:"mgmt_cnode,omitempty"`
	// VMS inner (NFS) vip
	MgmtInnerVip string `json:"mgmt_inner_vip,omitempty"`
	// VMS inner VIP CNode
	MgmtInnerVipCnode string `json:"mgmt_inner_vip_cnode,omitempty"`
	// 
	Name string `json:"name"`
	// 
	Psnt string `json:"psnt,omitempty"`
	// Cluster state: INIT/ACTIVATING/ONLINE/OFFLINE/FAILED/UNKNOWN (displayed in GUI as disconnected)
	State string `json:"state,omitempty"`
	// Cluster Leader state: UP/DOWN/UNKNOWN
	LeaderState string `json:"leader_state,omitempty"`
	// 
	SsdRaidRebuildProgress int32 `json:"ssd_raid_rebuild_progress,omitempty"`
	// 
	NvramRaidRebuildProgress int32 `json:"nvram_raid_rebuild_progress,omitempty"`
	// 
	NvramRaidRebuildProgressFraction string `json:"nvram_raid_rebuild_progress_fraction,omitempty"`
	// 
	MemoryRaidRebuildProgress int32 `json:"memory_raid_rebuild_progress,omitempty"`
	// 
	RaidRebuildProgress string `json:"raid_rebuild_progress,omitempty"`
	// 
	RaidDrivesCanFail int32 `json:"raid_drives_can_fail,omitempty"`
	// 
	SsdRaidState string `json:"ssd_raid_state,omitempty"`
	// 
	NvramRaidState string `json:"nvram_raid_state,omitempty"`
	// 
	MemoryRaidState string `json:"memory_raid_state,omitempty"`
	// 
	RemainingStripesHealth string `json:"remaining_stripes_health,omitempty"`
	// 
	MdUsageHealth string `json:"md_usage_health,omitempty"`
	// Cluster build
	Build string `json:"build,omitempty"`
	// Internal guid string used by cluster s/w
	SystemName string `json:"system_name,omitempty"`
	// Total Physical Space
	PhysicalSpace int64 `json:"physical_space,omitempty"`
	// Physical Space In Use
	PhysicalSpaceInUse int64 `json:"physical_space_in_use,omitempty"`
	// Usable Space
	PhysicalSpaceWoOverhead int64 `json:"physical_space_wo_overhead,omitempty"`
	// Usable Capacity
	UsableCapacityBytes int64 `json:"usable_capacity_bytes,omitempty"`
	// Free Usable Capacity
	FreeUsableCapacity int64 `json:"free_usable_capacity,omitempty"`
	// Usable Auxiliary Space In Use
	UsableAuxiliarySpaceInUse int64 `json:"usable_auxiliary_space_in_use,omitempty"`
	// Usable Capacity TB
	UsableCapacityTb float32 `json:"usable_capacity_tb,omitempty"`
	// Free Usable Capacity TB
	FreeUsableCapacityTb float32 `json:"free_usable_capacity_tb,omitempty"`
	// Usable Space In Use
	PhysicalSpaceInUseWoOverhead int64 `json:"physical_space_in_use_wo_overhead,omitempty"`
	// Total Estimated Logical Space
	LogicalSpace int64 `json:"logical_space,omitempty"`
	// Logical Space In Use
	LogicalSpaceInUse int64 `json:"logical_space_in_use,omitempty"`
	// Free Logical Space
	FreeLogicalSpaceTb float32 `json:"free_logical_space_tb,omitempty"`
	// Free Physical Space
	FreePhysicalSpaceTb float32 `json:"free_physical_space_tb,omitempty"`
	// Total Physical Space
	PhysicalSpaceTb float32 `json:"physical_space_tb,omitempty"`
	// Free Usable Space
	FreePhysicalSpaceWoOverhead float32 `json:"free_physical_space_wo_overhead,omitempty"`
	// Physical Snapshot Space In Use
	AuxiliarySpaceInUse float32 `json:"auxiliary_space_in_use,omitempty"`
	// Physical Snapshot Space In Use (TB)
	AuxiliarySpaceInUseTb float32 `json:"auxiliary_space_in_use_tb,omitempty"`
	// Logical Snapshot Space In Use
	LogicalAuxiliarySpaceInUse float32 `json:"logical_auxiliary_space_in_use,omitempty"`
	// Logical Snapshot Space In Use (TB)
	LogicalAuxiliarySpaceInUseTb float32 `json:"logical_auxiliary_space_in_use_tb,omitempty"`
	// Logical Space In Use
	EstoreCapacityInUseBytes float32 `json:"estore_capacity_in_use_bytes,omitempty"`
	// Logical Space In Use (TB)
	EstoreCapacityInUseTb float32 `json:"estore_capacity_in_use_tb,omitempty"`
	// Physical Space In Use
	PhysicalSpaceInUseTb float32 `json:"physical_space_in_use_tb,omitempty"`
	// Total Estimated Logical Space
	LogicalSpaceTb float32 `json:"logical_space_tb,omitempty"`
	// Logical Space In Use
	LogicalSpaceInUseTb float32 `json:"logical_space_in_use_tb,omitempty"`
	// Physical space in use percentage
	PhysicalSpaceInUsePercent float32 `json:"physical_space_in_use_percent,omitempty"`
	// Logical space in use percentage
	LogicalSpaceInUsePercent float32 `json:"logical_space_in_use_percent,omitempty"`
	// Logical data reduction ratio percentage
	LogicalDrrPercent float32 `json:"logical_drr_percent,omitempty"`
	// Physical data reduction ratio percentage
	PhysicalDrrPercent float32 `json:"physical_drr_percent,omitempty"`
	// Data reduction ratio (logical_space_in_use / physical_space_in_use)
	Drr float32 `json:"drr,omitempty"`
	// DRR presented as 1:5.6
	DrrText string `json:"drr_text,omitempty"`
	// Read IOPS
	RdIops int64 `json:"rd_iops,omitempty"`
	// Write IOPS
	WrIops int64 `json:"wr_iops,omitempty"`
	// IOPS
	Iops int64 `json:"iops,omitempty"`
	// Read Meta-data IOPS
	RdMdIops int64 `json:"rd_md_iops,omitempty"`
	// Write Meta-data IOPS
	WrMdIops int64 `json:"wr_md_iops,omitempty"`
	// Meta-data IOPS
	MdIops int64 `json:"md_iops,omitempty"`
	// Read Bandwidth
	RdBw int64 `json:"rd_bw,omitempty"`
	// Write Bandwidth
	WrBw int64 `json:"wr_bw,omitempty"`
	// Bandwidth
	Bw int64 `json:"bw,omitempty"`
	// Read Bandwidth
	RdBwMb float32 `json:"rd_bw_mb,omitempty"`
	// Write Bandwidth
	WrBwMb int32 `json:"wr_bw_mb,omitempty"`
	// Bandwidth
	BwMb int32 `json:"bw_mb,omitempty"`
	// Read Latency
	RdLatency int64 `json:"rd_latency,omitempty"`
	// Write Latency
	WrLatency int64 `json:"wr_latency,omitempty"`
	// Latency
	Latency int64 `json:"latency,omitempty"`
	// Read Latency
	RdLatencyMs int32 `json:"rd_latency_ms,omitempty"`
	// Write Latency
	WrLatencyMs int32 `json:"wr_latency_ms,omitempty"`
	// Latency
	LatencyMs int32 `json:"latency_ms,omitempty"`
	// Number of shards
	Shards int32 `json:"shards,omitempty"`
	// Number of DR shards
	DrShards int32 `json:"dr_shards,omitempty"`
	// Number of DR write buffer shards
	DrWbShards int32 `json:"dr_wb_shards,omitempty"`
	// Number of stripe groups
	StripeGroups int32 `json:"stripe_groups,omitempty"`
	// Number of shards
	MicroShards int32 `json:"micro_shards,omitempty"`
	// Number of DR shards
	MicroDrShards int32 `json:"micro_dr_shards,omitempty"`
	// Number of DR write buffer shards
	MicroDrWbShards int32 `json:"micro_dr_wb_shards,omitempty"`
	// Number of stripe groups
	MicroStripeGroups int32 `json:"micro_stripe_groups,omitempty"`
	// Number of shards
	MegaShards int32 `json:"mega_shards,omitempty"`
	// Number of DR shards
	MegaDrShards int32 `json:"mega_dr_shards,omitempty"`
	// Number of DR write buffer shards
	MegaDrWbShards int32 `json:"mega_dr_wb_shards,omitempty"`
	// Number of stripe groups
	MegaStripeGroups int32 `json:"mega_stripe_groups,omitempty"`
	// Number of cnode cores
	CnodeCores int32 `json:"cnode_cores,omitempty"`
	// Max NVRAM replication factor
	MaxNvramReplicationFactor int32 `json:"max_nvram_replication_factor,omitempty"`
	// Max SSD capacity percent
	MaxSsdCapacityPercent int32 `json:"max_ssd_capacity_percent,omitempty"`
	// Max NVRM capacity percent
	MaxNvramCapacityPercent int32 `json:"max_nvram_capacity_percent,omitempty"`
	// DBox HA support
	DboxHaSupport bool `json:"dbox_ha_support,omitempty"`
	// Disable directory snapshots
	DisableDirsnap bool `json:"disable_dirsnap,omitempty"`
	// Loopback (single node) installation
	Loopback bool `json:"loopback,omitempty"`
	// cluster enabled
	Enabled bool `json:"enabled,omitempty"`
	// Check cluster performance
	PerfCheck bool `json:"perf_check,omitempty"`
	// Mock NVMeoF devices with dmsetup devices
	Dmsetup bool `json:"dmsetup,omitempty"`
	// enable data reduction
	EnableDr bool `json:"enable_dr,omitempty"`
	// enable data encryption
	EnableEncryption bool `json:"enable_encryption,omitempty"`
	// Is half system
	HalfSystem bool `json:"half_system,omitempty"`
	UsedHandlesPercent float32 `json:"used_handles_percent,omitempty"`
	// Should install spdk
	UseSpdk bool `json:"use_spdk,omitempty"`
	// Is deep stripe system
	DeepStripe bool `json:"deep_stripe,omitempty"`
	// DR hash size in buckets
	DrHashSize int32 `json:"dr_hash_size,omitempty"`
	// Cluster pci port type (dual, single)
	DrivePciPortType string `json:"drive_pci_port_type,omitempty"`
	// SSH User name
	SshUser string `json:"ssh_user,omitempty"`
	// Leader CNode
	LeaderCnode string `json:"leader_cnode,omitempty"`
	// Defrag Threshold
	DefragThreshold int32 `json:"defrag_threshold,omitempty"`
	// enable SMB
	EnableSmb bool `json:"enable_smb,omitempty"`
	// enable similarity
	EnableSimilarity bool `json:"enable_similarity,omitempty"`
	// Format drives
	FormatDrives bool `json:"format_drives,omitempty"`
	// 
	ExpansionState string `json:"expansion_state,omitempty"`
	// 
	ExpansionPhase int32 `json:"expansion_phase,omitempty"`
	// 
	ExpansionPhaseDescription string `json:"expansion_phase_description,omitempty"`
	// 
	Url string `json:"url,omitempty"`
	// Cluster uptime
	Uptime string `json:"uptime,omitempty"`
	// Cluster online start time
	OnlineStartTime string `json:"online_start_time,omitempty"`
	// Cluster deployment time
	DeploymentTime string `json:"deployment_time,omitempty"`
	// 
	SystemSettings *interface{} `json:"system_settings,omitempty"`
	// Phase of a background running upgrade
	UpgradePhase string `json:"upgrade_phase,omitempty"`
	// 
	EnableTrash bool `json:"enable_trash,omitempty"`
	// GID with permissions to the trash folder
	TrashGid int32 `json:"trash_gid,omitempty"`
	// 
	MockFanoutAuth bool `json:"mock_fanout_auth,omitempty"`
	// 
	S3AllowCors bool `json:"s3_allow_cors,omitempty"`
	// Allow/deny NFS3 over UDP
	AllowNfs3OverUdp bool `json:"allow_nfs3_over_udp,omitempty"`
	// Enable Turbo Boost
	EnableTurboBoost bool `json:"enable_turbo_boost,omitempty"`
	// Suppress Linux showmount command output on for NFSv3 users
	ShowmountSuppressed bool `json:"showmount_suppressed,omitempty"`
	// 
	SwDefined bool `json:"sw_defined,omitempty"`
	// 
	LeaderUpgradeState string `json:"leader_upgrade_state,omitempty"`
	// Block/Unblock all external providers
	ProvidesBlocked bool `json:"provides_blocked,omitempty"`
	// Inactivity period for auto logout for VAST OS on all nodes (seconds)
	AutoLogoutTimeout int32 `json:"auto_logout_timeout,omitempty"`
	// Custom Message of the Day text displayed by VAST OS on login
	Motd string `json:"motd,omitempty"`
	// Append custom motd to default motd
	MotdAppendToDefault bool `json:"motd_append_to_default,omitempty"`
	// If true, the privileged user is enabled
	UseSmbPrivilegedUser bool `json:"use_smb_privileged_user,omitempty"`
	// Optional domain user logon name. If not set, the privileged user is 'vastadmin'
	SmbPrivilegedUserName string `json:"smb_privileged_user_name,omitempty"`
	// If true, the privileged group is enabled
	UseSmbPrivilegedGroup bool `json:"use_smb_privileged_group,omitempty"`
	// If true, the privileged group has full access. Otherwise, read only
	SmbPrivilegedGroupFullAccess bool `json:"smb_privileged_group_full_access,omitempty"`
	// Optional custom SID to specify a non default privileged group. If not set, privileged group is the Backup Operators domain group.
	SmbPrivilegedGroupSid string `json:"smb_privileged_group_sid,omitempty"`
	// Optional custom group logon name. If set, the group name will replace local administrators group access
	SmbAdministratorsGroupName string `json:"smb_administrators_group_name,omitempty"`
	// Rewrite status summary
	RewriteStatus *interface{} `json:"rewrite_status,omitempty"`
	// Current Rewrite phase
	RewritePhase string `json:"rewrite_phase,omitempty"`
	// Current Rewrite phase progress (%)
	RewriteProgress int32 `json:"rewrite_progress,omitempty"`
	// Current Rewrite types
	RewriteType []string `json:"rewrite_type,omitempty"`
	// Name of the audit directory, which is located under the root directory.
	AuditDirName string `json:"audit_dir_name,omitempty"`
	// Enter users here to grant them read access to all files in the audit directory. To make the audit directory accessible to clients, create a view on the directory.
	ReadAccessUsers []string `json:"read_access_users,omitempty"`
	// Enter groups here to grant them read access to all files in the audit directory. To make the audit directory accessible to clients, create a view on the directory.
	ReadAccessUsersGroups []string `json:"read_access_users_groups,omitempty"`
	// Maximum audit file size for each CNode core
	MaxFileSize int32 `json:"max_file_size,omitempty"`
	// Max retention period for audit files
	MaxRetentionPeriod int32 `json:"max_retention_period,omitempty"`
	// Max retention period timeunit for audit files
	MaxRetentionTimeunit string `json:"max_retention_timeunit,omitempty"`
	// Map of protocols audit configurations
	ProtocolsAudit *interface{} `json:"protocols_audit,omitempty"`
	// Protocols to audit
	Protocols []string `json:"protocols,omitempty"`
	// Default Share level permissions for Others
	DefaultOthersShareLevelPerm string `json:"default_others_share_level_perm,omitempty"`
}
