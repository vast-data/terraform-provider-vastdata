/*
 * VAST API Swagger Schema
 *
 * VAST Management API definition
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type ViewpolicyModifyParams struct {
	// 
	Name string `json:"name,omitempty"`
	// Frequency for updating the atime attribute of NFS files. atime is updated on read operations if the difference between the current time and the file's atime value is greater than the atime frequency. Specify as time in seconds.
	AtimeFrequency string `json:"atime_frequency,omitempty"`
	// GID inheritance. BSD - Inherit the GID from the parent folder. LINUX - Inherit the GID from the user.
	GidInheritance string `json:"gid_inheritance,omitempty"`
	// Sets the security flavor, which determines how file and directory permissions are applied in multiprotocol views
	Flavor string `json:"flavor,omitempty"`
	// Applicable with MIXED_LAST_WINS security flavor (Access can be set via NFSv3 regardless of this option)
	AccessFlavor string `json:"access_flavor,omitempty"`
	// Specifies the policy for limiting file path component name length.
	PathLength string `json:"path_length,omitempty"`
	// Specifies the policy for which characters are allowed in file names.
	AllowedCharacters string `json:"allowed_characters,omitempty"`
	// Sets the VAST Cluster's NFS server to use 32bit file IDs. This setting supports legacy 32-bit applications running over NFS.
	Use32bitFileid string `json:"use_32bit_fileid,omitempty"`
	// 
	ExposeIdInFsid bool `json:"expose_id_in_fsid,omitempty"`
	// Specify which NFS client hosts can access the view with read-write access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	ReadWrite []string `json:"read_write,omitempty"`
	// Specify which NFS client hosts can access the view with read-only access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	ReadOnly []string `json:"read_only,omitempty"`
	// Specify which NFS client hosts can access the view with read-write access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	NfsReadWrite []string `json:"nfs_read_write,omitempty"`
	// Specify which NFS client hosts can access the view with read-only access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	NfsReadOnly []string `json:"nfs_read_only,omitempty"`
	// Specify which SMB client hosts can access the view with read-write access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	SmbReadWrite []string `json:"smb_read_write,omitempty"`
	// Specify which SMB client hosts can access the view with read-only access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	SmbReadOnly []string `json:"smb_read_only,omitempty"`
	// Specify which S3 client hosts can access the view with read-write access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	S3ReadWrite []string `json:"s3_read_write,omitempty"`
	// Specify which S3 client hosts can access the view with read-only access. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	S3ReadOnly []string `json:"s3_read_only,omitempty"`
	// Specify which NFSv3 client hosts can access the trash folder. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address. Trash folder access must also be enabled for the cluster.
	TrashAccess []string `json:"trash_access,omitempty"`
	// Not in use
	UseAuthProvider bool `json:"use_auth_provider,omitempty"`
	// Specifies which source is trusted for the user's group memberships, when users' access to the view is authorized.
	AuthSource string `json:"auth_source,omitempty"`
	// Enables full support of extended POSIX Access Control Lists (ACL)
	NfsPosixAcl bool `json:"nfs_posix_acl,omitempty"`
	// If enabled for NFS-exposed views, the NFS server unilaterally returns open (777) permission for all files and directories when responding to client side access checks
	NfsReturnOpenPermissions bool `json:"nfs_return_open_permissions,omitempty"`
	// Specify which NFS client hosts have no squash. With no squash, all operations are supported. Use this option if you trust the root user not to perform operations that will corrupt data. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	NfsNoSquash []string `json:"nfs_no_squash,omitempty"`
	// Specify which NFS client hosts have root squash. With root squash, the root user is mapped to nobody for all file and folder management operations on the export. This enables you to prevent the strongest super user from corrupting all user data on the VAST Cluster. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	NfsRootSquash []string `json:"nfs_root_squash,omitempty"`
	// Specify which NFS client hosts have all squash. With all squash, all client users are mapped to nobody for all file and folder management operations on the export. Specify array of hosts separated by commas. Each host can be specified as an IP address, a netgroup key beginning with @, a CIDR subnet or a range of IPs indicated by an IP address with a * as a wildcard in place of any of the 8-bit fields in the IP address.
	NfsAllSquash []string `json:"nfs_all_squash,omitempty"`
	// For multiprotocol views, if the security flavor is NFS, this parameter sets default unix permission bits for files created by SMB clients. Use three digit numeric notation, each digit representing the user, group and others compontents of the permissions, in that order. Each digit is the sum of the read bit, write bit and execute bit. If reading is permitted, the read bit adds 4 to the component. If writing is permitted, the write bit adds 2 to the component. If execution is permitted, the execute bit adds 1 to the component.
	SmbFileMode int32 `json:"smb_file_mode,omitempty"`
	// For multiprotocol views, if the security flavor is NFS, this parameter sets default unix permission bits for directories created by SMB clients. Use three digit numeric notation, each digit representing the user, group and others compontents of the permissions, in that order. Each digit is the sum of the read bit, write bit and execute bit. If reading is permitted, the read bit adds 4 to the component. If writing is permitted, the write bit adds 2 to the component. If execution is permitted, the execute bit adds 1 to the component.
	SmbDirectoryMode int32 `json:"smb_directory_mode,omitempty"`
	// 
	ClusterId int32 `json:"cluster_id,omitempty"`
	S3BucketAcl *interface{} `json:"s3_bucket_acl,omitempty"`
	S3ObjectAcl *interface{} `json:"s3_object_acl,omitempty"`
	// Dedicate VIP Pools to the view policy. Specify VIP Pool IDs in a comma separated list.
	VipPools []int32 `json:"vip_pools,omitempty"`
	// 
	NfsMinimalProtectionLevel string `json:"nfs_minimal_protection_level,omitempty"`
	S3Visibility []string `json:"s3_visibility,omitempty"`
	S3VisibilityGroups []string `json:"s3_visibility_groups,omitempty"`
	// Apple sid
	AppleSid bool `json:"apple_sid,omitempty"`
	// Map of protocols audit configurations
	ProtocolsAudit *interface{} `json:"protocols_audit,omitempty"`
	// Protocols to audit
	Protocols []string `json:"protocols,omitempty"`
	// Add Snapshot Link Directories
	EnableSnapshotLookup bool `json:"enable_snapshot_lookup,omitempty"`
	// Enable Access to Snapshot Link Directories
	EnableListingOfSnapshotDir bool `json:"enable_listing_of_snapshot_dir,omitempty"`
	// Tenant ID
	TenantId int32 `json:"tenant_id,omitempty"`
	// If this flag is enabled, it will enforce the TLS certificate on all views
	NfsEnforceTls bool `json:"nfs_enforce_tls,omitempty"`
}
