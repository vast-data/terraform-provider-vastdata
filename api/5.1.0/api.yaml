openapi: 3.0.0
info:
  version: 1.0.0
  title: VAST Data API
  description: A API document representing VAST Data API
servers:
  - url: https://example.com/api
#----------------------------------------------------Paths----------------------------------------------------#
#-------------------------------------------------Components-------------------------------------------------#
components:
  schemas:
    Group:
     type: "object"
     properties:
       id:
         type: "integer"
         description: "The unique ID of the group."
       guid:
         type: "string"
         description: "The unique GUID of the group."
       name:
         type: "string"
         description: "The unique name of the group."
       gid:
         type: "integer"
         description: "The Unix GID of the group."
       sid:
         type: "string"
         description: "The SID of the group."
       s3_policies_ids:
         type: "array"
         items:
           type: "integer"
         description: "A list of identity policy IDs."
    ShareAcl:
      type: "object"
      properties:
        grantee:
          type: "string"
          enum: [users,groups]
        permissions:
          type: "string"
          enum: [FULL,CHANGE,READ]
        sid_str:
          type: "string"
        uid_or_gid:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        fqdn:
          type: "string"
    View:
      type: "object"
      required:
      - "path"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the view."
        guid:
          type: "string"
          description: "The unique GUID of the view."
        name:
          type: "string"
          description: "The unique name of the view."
        path:
          type: "string"
          description: "File system path. Begin with '/'. Do not include a trailing slash."
        create_dir:
          type: "boolean"
          description: "If true, creates the directory specified by the path."
        alias:
          type: "string"
          description: "Alias for NFS export. The alias must start with '/' and can include ASCII characters only. If configured, this setting supersedes the exposed NFS export path."
        bucket:
          type: "string"
          description: "S3 bucket name."
        policy_id:
          type: "integer"
          description: "The ID of the QoS policy associated with the view."
        cluster:
          type: "string"
          description: "Parent cluster."
        cluster_id:
          type: "integer"
          description: "Parent cluster ID."
        tenant_id:
          type: "integer"
          description: "The ID of the tenant associated with this view."
        directory:
          type: "boolean"
          description: "If true, creates the directory if it does not exist."
        s3_versioning:
          type: "boolean"
          description: "Enables or disables S3 versioning."
        s3_unverified_lookup:
          type: "boolean"
          description: "Allows or prohibits S3 Unverified Lookup."
        allow_anonymous_access:
          type: "boolean"
          description: "Allow S3 anonymous access"
        allow_s3_anonymous_access:
          type: "boolean"
          description: "Allows or prohibits S3 anonymous access."
        protocols:
          type: "array"
          items:
            type: "string"
            enum: [SMB,S3,ENDPOINT,DATABASE,NFS,NFS4]
          description: "Protocols exposed by this view."
        share:
          type: "string"
          description: 'Name of the SMB share. The name cannot not include the following characters: " \ / [ ] : | < > + = ; , * ?'
        bucket_owner:
          type: "string"
          description: "S3 bucket owner."
        bucket_creators:
          type: "array"
          items:
            type: "string"
          description: "A list of bucket creator users."
        bucket_creators_groups:
            type: "array"
            items:
                type: "string"
            description: "A list of bucket creator groups."
        s3_locks:
          type: "boolean"
          description: "Enables or disables S3 object locks."
        s3_locks_retention_mode:
          type: "string"
          description: "S3 locks retention mode."
        s3_locks_retention_period:
          type: "string"
          description: "Retention period for S3 locks. The period is specified as a positive integer suffixed by a time unit of measure, for example: 0d|2d|1y|2y"
        physical_capacity:
          type: "integer"
          format: "int64"
          description: "Physical capacity."
        logical_capacity:
          type: "integer"
          format: "int64"
          description: "Logical capacity."
        nfs_interop_flags:
          type: "string"
          enum: [BOTH_NFS3_AND_NFS4_INTEROP_DISABLED, ONLY_NFS3_INTEROP_ENABLED,
                 ONLY_NFS4_INTEROP_ENABLED, BOTH_NFS3_AND_NFS4_INTEROP_ENABLED]
          description: "Indicates whether the view supports simultaneous access using NFSv3/NFSv4/SMB protocols."
        is_remote:
          type: "boolean"
        share_acl:
          type: "object"
          description: "Share-level ACL details."
          properties:
            enabled:
              type: "boolean"
              description: "If true, share-level ACLs are enabled on the view."
            acl:
              type: "array"
              items:
                type: "object"
                $ref: '#/components/schemas/ShareAcl'
                description: "Share-level ACE"
              description: "Share-level ACL."
        qos_policy_id:
          type: "integer"
          description: ""
          description: "The ID of the QoS policy associated with the view."
        is_seamless:
          type: "boolean"
          description: "Enables or disables support for  seamless failover between replication peers by syncing file handles between the view and remote views on the replicated path on replication peers. This enables NFSv3 client users to retain the same mount point to the view in the event of a failover of the view path to a replication peer. Enabling this option may cause overhead and should only be done when the use case is relevant. To complete the configuration for seamless failover between any two peers, a seamless view must be created on each peer."
        max_retention_period:
          type: "string"
          description: "Applicable if locking is enabled. Sets a maximum retention period for files that are locked in the view. Files cannot be locked for longer than this period, whether they are locked manually (by setting the atime) or automatically, using auto-commit. Specify as an integer value followed by a letter for the time unit (m - minutes, h - hours, d - days, y - years). Example: 2y (2 years)."
        min_retention_period:
           type: "string"
           description: "Applicable if locking is enabled. Sets a minimum retention period for files that are locked in the view. Files cannot be locked for less than this period, whether locked manually (by setting the atime) or automatically, using auto-commit. Specify as an integer value followed by a letter for the time unit (h - hours, d - days, m - months, y - years). Example: 1d (1 day)."
        files_retention_mode:
          type: "string"
          enum: [GOVERNANCE,COMPLIANCE,NONE]
          description: "Applicable if locking is enabled. The retention mode for new files. For views enabled for NFSv3 or SMB, if locking is enabled, `files_retention_mode` must be set to `GOVERNANCE` or `COMPLIANCE`. If the view is enabled for S3 and not for NFSv3 or SMB, `files_retention_mode` can be set to `NONE`. If set to `GOVERNANCE`, locked files cannot be deleted or changed. The retention period can be shortened or extended by users with sufficient permissions. If set to `COMPLIANCE`, locked files cannot be deleted or changed. The retention period can be extended, but not shortened, by users with sufficient permissions. If set to `NONE` (S3 only), the retention mode is not set for the view; it is set individually for each object."
        default_retention_period:
          type: "string"
          description: "Relevant if locking is enabled. Required if `s3_locks_retention_mode` is set to `GOVERNANCE` or `COMPLIANCE`. Specifies a default retention period for objects in the bucket. If set, object versions that are placed in the bucket are automatically protected with the specified retention lock. Otherwise, by default, each object version has no automatic protection but can be configured with a retention period or legal hold. Specify as an integer followed by h for hours, d for days, m for months, or y for years. For example: 2d or 1y."
        auto_commit:
          type: "string"
          description: "Applicable if locking is enabled. Sets the auto-commit time for files that are locked automatically. These files are locked automatically after the auto-commit period elapses from the time the file is saved. Files locked automatically are locked for the default retention period, after which they are unlocked. Specify as an integer value followed by a letter for the time unit (h - hours, d - days, y - years). Example: 2h (2 hours)."
        s3_object_ownership_rule:
          type: "string"
          enum: [ None, BucketOwnerPreferred, ObjectWriter, BucketOwnerEnforced ]
          Description: "S3 Object Ownership lets you set ownership of objects uploaded to a given bucket and to determine whether ACLs are used to control access to objects within this bucket. A bucket can be configured with one of the following object ownership rules: `BucketOwnerEnforced` - The bucket owner has full control over any object in the bucket. `ObjectWriter` - The user that uploads an object has full control over this object. ACLs can be used to let other users access the object. `BucketOwnerPreferred` - The bucket owner has full control over new objects uploaded to the bucket by other users. ACLs can be used to control access to the objects. `None` - S3 Object Ownership is disabled for the bucket."
        locking:
          type: "boolean"
          description: "Enables or disables Write Once Read Many (WORM) locking."
        ignore_oos:
          type: "boolean"
          description: "Ignore oos"
        abac_tags:
          type: "array"
          items:
            type: "string"
          description: "A list of Attribute-Based Access Control (ABAC) tags. This option can be used only when using SMB/NFSv4 protocols."

    ViewCreate:
      type: "object"
      required:
      - "path"
      properties:
        name:
          type: "string"
          description: "A unique name for the view."
        path:
          type: "string"
          description: "File system path. Begin with '/'. Do not include a trailing slash."
        create_dir:
          type: "boolean"
          description: "If `true`, creates the directory specified by the path."
        alias:
          type: "string"
          description: "Alias for NFS export. The alias must start with '/' and can include ASCII characters only. If configured, this setting supersedes the exposed NFS export path."
        bucket:
          type: "string"
          description: "S3 bucket name."
        policy_id:
          type: "integer"
          description: "The ID of the view policy to be associated with the view."
        cluster:
          type: "string"
          description: "Parent cluster."
          x-cli-header: "Cluster"
        cluster_id:
          type: "integer"
          description: "Parent cluster ID."
        tenant_id:
          type: "integer"
          description: "The ID of the tenant associated with this view."
        directory:
          type: "boolean"
          description: "If `true`, creates the directory if it does not exist."
        s3_versioning:
          type: "boolean"
          description: "Enables or disables S3 versioning."
        s3_unverified_lookup:
          type: "boolean"
          description: "Allows or prohibits S3 Unverified Lookup."
        allow_anonymous_access:
          type: "boolean"
          description: "Allows or prohibits S3 anonymous access."
        allow_s3_anonymous_access:
          type: "boolean"
          description: "Allows or prohibits S3 anonymous access."
        protocols:
          type: "array"
          items:
            type: "string"
            enum: [SMB,S3,ENDPOINT,DATABASE,NFS,NFS4]
          description: "Protocols exposed by this view."
        share:
          type: "string"
          description: 'Name of the SMB share. The name cannot not include the following characters: " \ / [ ] : | < > + = ; , * ?'
        bucket_owner:
          type: "string"
          description: "S3 bucket owner."
        bucket_creators:
          type: "array"
          items:
            type: "string"
          description: "A list of bucket creator users."
        bucket_creators_groups:
            type: "array"
            items:
                type: "string"
            description: "A list of bucket creator groups."
        s3_locks:
          type: "boolean"
          description: "Enables or disables S3 object locks."
        s3_locks_retention_mode:
          type: "string"
          description: "S3 locks retention mode."
        s3_locks_retention_period:
          type: "string"
          description: "Retention period for S3 locks. The period is specified as a positive integer suffixed by a time unit of measure, for example: `0d`|`2d`|`1y`|`2y`"
        physical_capacity:
          type: "integer"
          format: "int64"
          description: "Physical capacity."
        logical_capacity:
          type: "integer"
          format: "int64"
          description: "Logical capacity."
        nfs_interop_flags:
          type: "string"
          enum: [BOTH_NFS3_AND_NFS4_INTEROP_DISABLED, ONLY_NFS3_INTEROP_ENABLED,
                 ONLY_NFS4_INTEROP_ENABLED, BOTH_NFS3_AND_NFS4_INTEROP_ENABLED]
          description: "Indicates whether the view should support simultaneous access using NFSv3/NFSv4/SMB protocols."
        is_remote:
          type: "boolean"
        share_acl:
          type: "object"
          description: "Share-level ACL details."
          properties:
            enabled:
              type: "boolean"
              description: "If true, share-level ACLs are enabled on the view."
            acl:
              type: "array"
              items:
                type: "object"
                $ref: '#/components/schemas/ShareAcl'
                description: "Share-level ACE"
              description: "Share-level ACL."
        qos_policy_id:
          type: "integer"
          description: "The ID of the QoS policy associated with the view."
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the user."
        guid:
          type: "string"
          description: "The unique GUID of the user."
        name:
          type: "string"
          description: "The unique name of the user."
        uid:
          type: "integer"
          description: "The user's Unix UID."
        leading_gid:
          type: "integer"
          description: "The user's leading Unix GID."
        gids:
          type: "array"
          items:
            type: "integer"
          description: "A list of supplementary GIDs."
        groups:
          type: "array"
          items:
            type: "string"
          description: "A list of supplementary groups."
        group_count:
          type: "integer"
          description: "Group count."
        leading_group_name:
          type: "string"
          description: "The name of the leading group."
        leading_group_gid:
          type: "int"
          description: "The GID of the leading group."
        sid:
          type: "string"
          description: "The user's SID."
        primary_group_sid :
          type: "string"
          description: "The user's primary group SID."
        sids:
          type: "array"
          items:
            type: "string"
          description: "A list of supplementary SIDs."
        local:
          type: "boolean"
          description: "If `true`, the user is a local user."
        allow_create_bucket:
          type: "boolean"
          description: "Allows or prohibits bucket creation by the user."
        allow_delete_bucket:
          type: "boolean"
          description: "Allows or prohibits bucket deletion by the user."
        s3_superuser:
          type: "boolean"
          description: "If `true`, the user is an S3 superuser."
        s3_policies_ids:
          type: "array"
          items:
            type: "integer"
          description: "A list of identity policy IDs."
    NonLocalUser:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the non-local user."
        uid:
          type: "integer"
          description: "The user''s Unix UID."
        username:
          type: "string"
          description: "The  username of the non-local user."
        allow_create_bucket:
          type: "boolean"
          description: "Allows or prohibits bucket creation by the user."
        allow_delete_bucket:
          type: "boolean"
          description: "Allows or prohibits bucket deletion by the user."
        tenant_id:
          type: "integer"
          description: "Tenant ID."
        s3_policies_ids:
          type: "array"
          items:
            type: "integer"
          description: "A list of identity policy IDs."
        context:
          type: "string"
          description: "Context from which the user originates. Valid values: 'ad', 'nis' and 'ldap'."
    NonLocalGroup:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the non-local group."
        gid:
          type: "integer"
          description: "Group GID."
        sid:
          type: "string"
          description: "Group SID."
        groupname:
          type: "string"
          description: "Group name."
        tenant_id:
          type: "integer"
          description: "Tenant ID."
        s3_policies_ids:
          type: "array"
          items:
            type: "integer"
          description: "A list of identity policy IDs."
        context:
          type: "string"
          description: "Context from which the user originates. Valid values: 'ad', 'nis' and 'ldap'."
    UserKey:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The unique ID of the access key."
        user_id:
          type: "integer"
          description: "The ID of the user to create the key for."
        access_key:
          type: "string"
          description: "The access key of the user."
        secret_key:
          type: "string"
          description: "The secret key of the user. This secret key is not encrypted and should be kept in an highly secure backend. This field will only be returned if `pgp_public_key` is not provided."
        pgp_public_key:
          type: "string"
          description: "The PGP public key in the ASCII armor format to encrypt the secret key returned by the VAST cluster. If this option is set, the `encrypted_secret_key` will be returned, while `secret_key` will be empty. Changing this after apply will have no effect."
        encrypted_secret_key:
          type: "string"
          description: "The secret key returned from the VAST cluster. This key is encrypted with the public key that was supplied in `pgp_public_key`."
        enabled:
          type: "boolean"
          description: "Sets the key to be enabled or disabled."
          default: true
    NonLocalUserKey:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The unique ID of the access key."
        uid:
          type: "integer"
          description: "The user's Unix UID."
        access_key:
          type: "string"
          description: "The user's access key."
        secret_key:
          type: "string"
          description: "The user's secret key."
        pgp_public_key:
          type: "string"
          description: "The PGP public key in the ASCII armor format to encrypt the secret key returned by the VAST cluster. If this option is set, the `encrypted_secret_key` will be returned, while `secret_key` will be empty. Changing this after apply will have no effect."
        encrypted_secret_key:
          type: "string"
          description: "The secret key returned from the VAST cluster. This key is encrypted with the public key that was supplied in `pgp_public_key`."
        tenant_id:
          type: "integer"
          description: "Tenant ID."
        enabled:
          type: "boolean"
          description: "Sets the key to be enabled or disabled."
          default: true
    Nis:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the NIS server configuration."
        guid:
          type: "string"
          description: "The unique GUID of the NIS server configuration."
        domain_name:
          type: "string"
          description: "The NIS server domain name."
        hosts:
          type: "array"
          items:
            type: "string"
          description: "A list of IP addresses or hostnames of NIS servers."
    Tenant:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the tenant."
        guid:
          type: "string"
          description: "The unique GUID of the tenant."
        name:
          type: "string"
          description: "The unique name of the tenant."
        use_smb_privileged_user:
          type: "boolean"
          description: "Enables or disables SMB privileged user."
        smb_privileged_user_name:
          type: "string"
          description: "An optional custom username for the SMB privileged user. If not set, the SMB privileged user name is `vastadmin`."
        use_smb_privileged_group:
          type: "boolean"
          description: "Enables or disables SMB privileged user group."
        smb_privileged_group_sid:
          type: "string"
          description: "An optional custom SID to specify a non-default SMB privileged group. If not set, the SMB privileged group is the Backup Operators domain group."
        smb_privileged_group_full_access:
          type: "boolean"
          description: "If `true`, the SMB privileged user group has read and write control access. Members of the group can perform backup and restore operations on all files and directories, without requiring read or write access to the specific files and directories. If `false`, the privileged group has read-only access."
        smb_administrators_group_name:
          type: "string"
          description: "An optional custom name to specify a non-default privileged group. If not set, the privileged group is the Backup Operators domain group."
        default_others_share_level_perm:
          type: "string"
          description: "Default share-level permissions for others."
          enum: [READ, CHANGE, FULL]
        trash_gid:
          type: "integer"
          description: "A GID with permissions to the trash folder."
        client_ip_ranges:
          type: "array"
          items:
            type: "array"
            items:
              type: "string"
          description: "An array of source IP ranges to allow for the tenant."
        posix_primary_provider:
          type: "string"
          enum: [NONE, LDAP, NIS, AD, LOCAL]
          description: "The POSIX primary provider type."
        ad_provider_id:
          type: "integer"
          description: ""
        ldap_provider_id"
        ldap_provider_id:
          type: "integer"
          description: "The ID of the OpenLDAP provider specified separately by the user."
        nis_provider_id:
          type: "integer"
          description: "The NIS provider ID."
        encryption_crn:
          type: "string"
          description: "The unique ID of the tenant's encryption group."
        is_nfsv42_supported:
          type: "boolean"
          description: "Enables or disables NFSv4.2."
        allow_locked_users:
          type: "boolean"
          description: "Allow IO from users whose Active Directory accounts are locked out by lockout policies due to unsuccessful login attempts."
          default: false
        allow_disabled_users:
          type: "boolean"
          description: "Allows or prohibits IO from users whose Active Directory accounts are locked out by lockout policies due to unsuccessful login attempts."
          default: false
        use_smb_native:
          type: "boolean"
          description: "Enables or disables use of native SMB authentication."
        vippool_names:
           type: "array"
           items:
             type: "string"
           description: "An array of names of virtual IP pools attached to the tenant."
        vippool_ids:
           type: "array"
           items:
             type: "integer"
             format: "int64"
           description: "An array of IDs of virtual IP pools attached to the tenant."
    ViewPolicy:
      type: "object"
      required:
      - "name"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the view policy."
        guid:
          type: "string"
          description: "The unique GUID of the view policy."
        name:
          type: "string"
          description: "The unique name of the view policy."
        gid_inheritance:
          type: "string"
          description: "Determines the way a file inherits GID."
        flavor:
          type: "string"
          description: "Security flavor, which determines how file and directory permissions are applied in multiprotocol views."
        access_flavor:
          type: "string"
          description: "Controls which protocols can set file permissions when the security flavor is set to `MIXED_LAST_WINS`. Note that with `MIXED_LAST_WINS`, NFSv3 access is unaffected by this option."
        path_length:
          type: "string"
          description: "How to determine the maximum allowed path length."
          enum: [ LCD, NPL ]
        allowed_characters:
          type: "string"
          description: "How to determine the allowed characters in a path."
        use_32bit_fileid:
          type: "boolean"
          description: ""
        expose_id_in_fsid:
          type: "boolean"
          description: ""
        use_auth_provider:
          type: "boolean"
          description: "Enables or disables use of the configured authentication provider(s) to enforce group permissions. If set to `true` without specifing `auth_source`, the `auth_source` is set to `PROVIDERS`. If set to `false`, the `auth_source` is set to RPC. Due to the nature of Terraform, simply changing `use_auth_provider` from `false` to `true` or the other way around will not change the value of the `auth_source` parameter because Terrafrom will keep holding the previous value. Therefore it is advisable to always specify the value of `auth_source`."
          default: false
        auth_source:
          type: "string"
          description: "The source of authentication."
          enum: [PROVIDERS,RPC,RPC_AND_PROVIDERS]
        read_write:
          type: "array"
          items:
            type: "string"
          description: "Hosts with NFS read/write permissions."
        read_only:
          type: "array"
          items:
            type: "string"
          description: "Hosts with NFS read-only permissions."
        nfs_read_write:
          type: "array"
          items:
            type: "string"
          description: "Hosts with NFS read/write permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `nfs_read_write` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        nfs_read_only:
          type: "array"
          items:
            type: "string"
          description: "Hosts with NFS read-only permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `nfs_read_only` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        smb_read_write:
          type: "array"
          items:
            type: "string"
          description: "Hosts with SMB read/write permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `smb_read_write` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        smb_read_only:
          type: "array"
          items:
            type: "string"
          description: "Hosts with SMB read-only permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `smb_read_only` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        s3_read_write:
          type: "array"
          items:
            type: "string"
          description: "Hosts with S3 read/write permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `s3_read_write` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        s3_read_only:
          type: "array"
          items:
            type: "string"
          description: "Hosts with S3 read-only permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `s3_read_only` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        trash_access:
          type: "array"
          items:
            type: "string"
          description: "Hosts with trash folder permissions."
        nfs_posix_acl:
          type: "boolean"
          description: "Enables or disables POSIX ACL."
        nfs_return_open_permissions:
          type: "boolean"
          description: "When using SMB, enables or disables use of open permissions for files."
        nfs_no_squash:
          type: "array"
          items:
            type: "string"
          description: "Hosts with the no-squash policy. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `nfs_no_squash` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        nfs_root_squash:
          type: "array"
          items:
            type: "string"
          description: "Hosts with the root squash policy. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `nfs_root_squash` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        nfs_all_squash:
          type: "array"
          items:
            type: "string"
          description: "Hosts with the all-squash policy. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if `nfs_all_squash` is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to []."
        s3_bucket_full_control:
          type: "string"
          description: "Hosts with full permissions"
        s3_bucket_listing:
          type: "string"
          description: "Hosts with full permissions"
        s3_bucket_read:
          type: "string"
          description: "Hosts with full permissions"
        s3_bucket_read_acp:
          type: "string"
          description: "Hosts with full permissions"
        s3_bucket_write:
          type: "string"
          description: "Hosts with full permissions"
        s3_bucket_write_acp:
          type: "string"
          description: "Hosts with full permissions"
        s3_object_full_control:
          type: "string"
          description: "Hosts with full permissions"
        s3_object_read:
          type: "string"
          description: "Hosts with full permissions"
        s3_object_read_acp:
          type: "string"
          description: "Hosts with full permissions"
        s3_object_write:
          type: "string"
          description: "Hosts with full permissions"
        s3_object_write_acp:
          type: "string"
          description: "Hosts with full permissions"
        smb_file_mode:
          type: "integer"
          description: "Default UNIX-type permissions on a new file."
        smb_directory_mode:
          type: "integer"
          description: "Default UNIX-type permissions on a new folder."
        smb_file_mode_padded:
          type: "string"
          description: "Default UNIX-type permissions on a new file."
        smb_directory_mode_padded:
          type: "string"
          description: "Default UNIX-type permissions on a new folder."
        cluster:
          type: "string"
          description: "Parent cluster."
        cluster_id:
          type: "integer"
          description: "Parent cluster ID."
        tenant_id:
          type: "integer"
          description: "Tenant ID."
        tenant_name:
          type: string
          description: "Tenant name."
        url:
          type: "string"
          description: ""
        atime_frequency:
          type: "string"
          description: "Frequency for updating the atime attribute of NFS files. atime is updated on read operations if the difference between the current time and the file's atime value is greater than the atime frequency. Specify as time in seconds."
        vip_pools:
          type: "array"
          items:
            type: "integer"
          description: "A comma-separated list of virtual IP pool IDs. This attribute conflicts with `vippool_permissions` and cannot be supplied together with it. Also, due to the lack of ability to configure virtual IP pool permissions using this attibute, the pool permissions are always defined as read/write."
        nfs_minimal_protection_level:
          type: "string"
          description: "NFSv4.1 minimal protection level."
          enum: [ NONE, SYSTEM, KRB_AUTH_ONLY, KRB_INTEGRITY, KRB_PRIVACY ]
        s3_visibility:
          type: "array"
          items:
            type: "string"
          description: "A list of usernames for bucket listing permissions."
        s3_visibility_groups:
          type: "array"
          items:
            type: "string"
          description: "A list of group names for bucket listing permissions."
        apple_sid:
          type: "boolean"
          description: "Enables or disables returning Security IDs (SIDs) in Apple compatible representation."
        protocols:
          type: "array"
          items:
            type: "string"
          description: "Protocols to audit."
        data_create_delete:
          type: "boolean"
          description: "If `true`, logs operations that create or delete files, directories, or objects."
        data_modify:
          type: "boolean"
          description: "If `true`, logs operations that modify data or metadata."
        data_read:
          type: "boolean"
          description: "If `true`, logs operations that read data or metadata."
        log_full_path:
          type: "boolean"
          description: "Enables or disables logging of full Element Store path to the requested resource."
        log_hostname:
          type: "boolean"
          description: "Enables or disables logging of the accessing host name."
        log_username:
          type: "boolean"
          description: "Enables or disables logging of username of the requesting user. Disabled by default."
        log_deleted:
          type: "boolean"
          description: "Enables or disables logging of deleted files and directories from the trash folder."
        remote_mapping:
          type: "object"
          description: ""
        count_views:
          type: "integer"
          description: "The total number of views associated with this view policy."
        enable_snapshot_lookup:
          type: "boolean"
          description: "Specifies whether to make the .snapshot directory accessible in subdirectories of the view."
        enable_listing_of_snapshot_dir:
          type: "boolean"
          description: "Specifies whether to make the .snapshot directory visible in subdirectories of the view."
        s3_special_chars_support:
          type: "boolean"
          description: "Allows or prohibits object names that contain “//“ or “/../“ and are incompatible with other protocols."
        smb_is_ca:
          type: "boolean"
          description: "If `true`, the SMB share exposed by the view is set as continuously available, which allows SMBv3 clients to request use of persistent file handles and keep their connections to this share in case of a failover event."
        nfs_case_insensitive:
          type: "boolean"
          description: "If `true`, forces case insensitivity for NFSv3 and NFSv4."
        enable_access_to_snapshot_dir_in_subdirs:
          type: "boolean"
          description: "Specifies whether to make the .snapshot directory visible in subdirectories of the view."
        enable_visibility_of_snapshot_dir:
          type: "boolean"
          description: "Specifies whether to make the .snapshot directory visible in subdirectories of the view."
        nfs_enforce_tls:
          type: "boolean"
          description: "If `true`, NFSv3 and NFSv4.1 client mounts are accepted only if they are TLS-encrypted. Use only with `nfs_minimal_protection_level` set to `System` or `None`."
        protocols_audit:
          type: "object"
          $ref: "#/components/schemas/ProtocolsAudit"
          description: "Configure auditing"
        vippool_permissions:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/PermissionsPerVipPool"
          description: "A list of virtual IP pool permissions. This attribute conflicts with `vip_pools` and cannot be supplied together with it."
        # permission_per_vip_pool:
        #   type: "object"
        #   additionalProperties:
        #     type: "string"
    
    VIPPool:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the virtual IP pool."
        guid:
          type: "string"
          description: "The unique GUID of the virtual IP pool."
        name:
          type: "string"
          description: "The unique name of the virtual IP pool."
        subnet_cidr:
          type: "integer"
          description: "IPv4 subnet CIDR prefix (number of bits)."
        subnet_cidr_ipv6:
          type: "integer"
          description: "IPv6 subnet CIDR prefix (number of bits)."
        gw_ip:
          type: "string"
          description: "Gateway IPv4 address."
        gw_ipv6:
          type: "string"
          description: "Gateway IPv6 address."
        vlan:
          type: "int"
          description: "The VLAN of the virtual IP pool."
        state:
          type: "string"
          description: ""
        cnode_ids:
          type: "array"
          items:
            type: "integer"
          description: "IDs of CNodes comprising the CNode group."
        cluster:
          type: "string"
          description: "Parent cluster."
        url:
          type: "string"
          description: ""
        domain_name:
          type: "string"
          description: ""
        role:
          type: "string"
          description: "Role."
        ip_ranges:
          type: "array"
          items:
            type: "array"
            items:
              type: "string"
          description: "IP ranges."
        vms_preferred:
          type: "boolean"
          description: "If `true`, the CNodes included in this virtual IP pool are handled as preferred CNodes during VMS host election."
        enabled:
          type: "boolean"
          description: "Enables or disables the virtual IP pool."
        port_membership:
          type: "string"
          description: "The port(s) on the CNode that this pool will use: `Right`, `Left` or `All`."
        active_interfaces:
          type: "integer"
          description: "The number of active interfaces."
        enable_l3:
          type: "boolean"
          description: "Enables or disables L3 CNode access."
        vast_asn:
          type: "integer"
          description: "VAST ASN."
        peer_asn:
          type: "integer"
          description: "Peer ASN."
        tenant_id:
          type: "integer"
          format: "int64"
          description: "The ID of the tenant associated with the virtual IP pool. An ID of `0` (zero) means the virtual IP pool is available for all tenants."
    Dns:
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the VAST DNS server configuration."
        id:
          type: "integer"
          description: "The unique ID of the VAST DNS server configuration."
        vip:
          type: "string"
          description: "The virtual IP for the DNS service. DNS requests from your external DNS server must be delegated to this IP."
        domain_suffix:
          type: "string"
          description: "A suffix to append to domain names of each virtual IP pool. The suffix should append each domain name to form a valid FQDN for DNS requests to target."
        vip_gateway:
          type: "string"
          description: "The IPv4 address of the gateway to the external DNS server if it is on a different subnet. Must be on the same subnet as the IP and reachable from the relevant network interface."
        enabled:
          type: "boolean"
          description: "Enables or disables the VAST DNS server configuration."
        guid:
          type: "string"
          description: "The unique GUID of the VAST DNS server configuration."
        vip_subnet_cidr:
          type: "integer"
          description: "The subnet, in the CIDR format, on which the DNS resides."
        vip_vlan:
          type: "integer"
          description: "The VLAN (optional) to enable communication with the external DNS server(s)."
        cnode_ids:
          type: "array"
          items:
            type: "integer"
        vip_ipv6:
          type: "string"
          description: "The IPv6 address of the DNS service."
        vip_ipv6_subnet_cidr:
          type: "integer"
          description: "The subnet, in the CIDR format, on which the DNS resides. Valid values: [1..128]"
        vip_ipv6_gateway:
          type: "string"
          description: "The IPv6 address of the gateway to the external DNS server if it is on a different subnet."
        net_type:
          type: "string"
          description: "The interface that listens for DNS service delegation requests."
          enum: [NORTH_PORT, SOUTH_PORT, EXTERNAL_PORT]
          default: "EXTERNAL_PORT"
        invalid_name_response:
          type: "string"
          description: "The response DNS type for invalid DNS name."
          enum: [NXDOMAIN, REFUSED, SERVFAIL, NOERROR]
        invalid_type_response:
          type: "string"
          description: "The response DNS type for invalid DNS type."
          enum: [NXDOMAIN, REFUSED, SERVFAIL, NOERROR]
        ttl:
          type: "integer"
          description: "The response TTL in seconds."
    Quota:
      description: "This is a quota."
      type: "object"
      properties:
        id:
          type: "integer"
          description: ""
        guid:
          type: "string"
          description: "Quota GUID."
        name:
          type: "string"
          description: "Quota name."
        state:
          type: "string"
        pretty_state:
          type: "string"
        path:
          type: "string"
          description: "Directory path."
        pretty_grace_period:
          type: "string"
          description: "The quota enforcement pretty grace period in seconds, minutes, hours or days. Example: 90m"
        grace_period:
          type: "string"
          description: "QQuota enforcement grace period in seconds, minutes, hours or days. Example: 90m"
        time_to_block:
          type: "string"
          description: "Grace period expiration time."
        soft_limit:
          type: "integer"
          format: "int64"
          description: "Soft quota limit."
        hard_limit:
          type: "integer"
          format: "int64"
          description: "Hard quota limit."
        hard_limit_inodes:
          type: "integer"
          description: "Hard inodes quota limit."
        soft_limit_inodes:
          type: "integer"
          description: "Soft inodes quota limit."
        used_inodes:
          type: "integer"
          description: "Used inodes."
        used_capacity:
          type: "integer"
          format: "int64"
          description: "Used capacity in bytes."
        used_capacity_tb:
          type: "number"
          format: "float"
          description: "Used capacity in TB."
        used_effective_capacity:
          type: "integer"
          format: "int64"
          description: "Used effective capacity in bytes."
        used_effective_capacity_tb:
          type: "number"
          format: "float"
          description: "Used effective capacity in TB."
        tenant_id:
          type: "integer"
          description: "Tenant ID."
        tenant_name:
          type: "string"
          description: "Tenant name."
        cluster:
          type: "string"
          description: "Parent cluster."
        cluster_id:
          type: "integer"
          description: "Parent cluster ID."
        system_id:
          type: "integer"
          description: ""
        is_user_quota:
          type: "boolean"
        enable_email_providers:
            type: "boolean"
        num_exceeded_users:
          type: "integer"
        num_blocked_users:
          type: "integer"
        enable_alarms:
          type: "boolean"
          description: "Enables or disables alarms when users or groups are exceeding their limits."
        default_email:
          type: "string"
          description: "The default email address used if there is no suffix specified and no address can be found in the providers."
        percent_inodes:
          type: "integer"
          description: "Percentage of used inodes out of the hard limit."
        percent_capacity:
            type: "integer"
            description: "Percentage of used capacity out of the hard limit."
        default_user_quota:
          type: "object"
          $ref: "#/components/schemas/DefaultQuota"
        default_group_quota:
          type: "object"
          $ref: "#/components/schemas/DefaultQuota"
        user_quotas:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/UserQuota"
        group_quotas:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/UserQuota"
    DefaultQuota:
      type: "object"
      properties:
        quota_system_id:
          type: "integer"
          description: "The system ID of the quota."
        soft_limit:
          type: "integer"
          format: "int64"
          description: "The soft limit for capacity in bytes."
        hard_limit:
          type: "integer"
          format: "int64"
          description: "The hard limit for capacity in bytes."
        sof_limit_inodes:
          type: "integer"
          format: "int64"
          description: "The soft limit for the number of inodes."
        hard_limit_inodes:
          type: "integer"
          format: "int64"
          description: "The hard limit for the number of inodes."
        grace_period:
          type: "string"
          description: "Quota enforcement grace period in the format of HH:MM:SS."
    UserQuota:
      type: "object"
      properties:
        grace_period:
          type: "string"
          description: "Quota enforcement grace period in the format of HH:MM:SS."
        time_to_block:
          type: "string"
          description: "Grace period expiration time."
        soft_limit:
          type: "integer"
          format: "int64"
          description: "Soft quota limit."
        hard_limit:
          type: "integer"
          format: "int64"
          description: "Hard quota limit."
        hard_limit_inodes:
          type: "integer"
          format: "int64"
          description: "Hard quota limit for the number of inodes."
        soft_limit_inodes:
          type: "integer"
          format: "int64"
          description: "Soft quota limit for the number of inodes."
        used_inodes:
          type: "integer"
          format: "int64"
          description: "Used inodes."
        used_capacity:
          type: "integer"
          format: "int64"
          description: "Used capacity in bytes."
        is_accountable:
          type: "boolean"
          description: ""
        quota_system_id:
          type: "integer"
          description: ""
        entity:
          type: "object"
          $ref: "#/components/schemas/QuotaEntityInfo"
    QuotaEntityInfo:
      type: "object"
      required:
        - "is_group"
      properties:
        name:
          type: "string"
          description: "The name of the entity."
        vast_id:
          type: "integer"
          description: ""
        email:
          type: "string"
        is_group:
          type: "boolean"
        identifier:
          type: "string"
        identifier_type:
          type: "string"
    Ldap:
      type: "object"
      properties:
        id:
          type: "integer"
          description: ""
        guid:
          type: "string"
          description: ""
        urls:
          type: "array"
          items:
            type: "string"
          description: "A list of URIs of LDAP servers (Domain Controllers in Active Directory), in priority order. The URI with highest priority that has a good health status is used. Specify each URI in the format `<scheme>://<address>`. `<address>` can be either a DNS name or an IP address, for example: `ldap://ldap.company.com, ldaps://ldaps.company.com, ldap://192.0.2.2`."
        port:
          type: "integer"
          description: "LDAP server port. 389 (LDAP)  636 (LDAPS)"
          default: 389
        binddn:
          type: "string"
          description: "Distinguished name of the LDAP superuser."
        bindpw:
          type: "string"
          description: "Password for the LDAP superuser"
        searchbase:
          type: "string"
          description: "The base DN is the starting point that the LDAP provider uses when searching for users and groups. If a group base DN is configured, it will be used instead of the base DN, for groups only."
        group_searchbase:
          type: "string"
          description: "Base DN for group queries within the joined domain only. When auto-discovery is enabled, group queries outside the joined domain use automatically discovered base DNs."
        method:
          type: "string"
          description: "Bind authentication method."
          enum: [simple,sasl,anonymous]
        gid_number:
          type: "string"
          description: "Attribute mapping for gid number."
          default: "gidNumber"
        uid:
          type: "string"
          description: "Attribute mapping for uid."
          default: "uid"
        uid_number:
          type: "string"
          description: "Attribute mapping for uid number."
          default: "uidNumber"
        match_user:
          type: "string"
          description: "Attribute mapping for user matching."
          default: "uid"
        uid_member:
          type: "string"
          description: "Attribute mapping for uid member."
          default: "memberUID"
        posix_account:
          type: "string"
          description: "Attribute mapping for posix account."
          default: "posixAccount"
        posix_group:
          type: "string"
          description: "Attribute mapping for posix group."
          default: "posixGroup"
        use_tls:
          type: "boolean"
          description: "Specifies whether to configure LDAP with TLS."
          default: false
        posix_primary_provider:
          type: "boolean"
          description: "POSIX primary provider."
        posix_attributes_source:
          type: "string"
          description: ""
          default: "JOINED_DOMAIN"
        reverse_lookup:
          type: "boolean"
          description: ""
          default: false
        tls_certificate:
          type: "string"
          description: ""
        active_directory:
          type: "string"
          description: ""
        query_groups_mode:
          type: "string"
          description: "Query group mode."
          enum: [COMPATIBLE,RFC2307BIS,RFC2307,NONE]
        username_property_name:
          type: "string"
          description: "Username property name."
          default: "cn"
        domain_name:
          type: "string"
          description: "FQDN of the domain."
        user_login_name:
          type: "string"
          description: "The attribute used to query the provider for the user login name in NFS ID mapping."
          default: "uid"
        group_login_name:
          type: "string"
          description: "The attribute used to query the provider for the group login name in NFS ID mapping."
          default: "cn"
        mail_property_name:
          type: "string"
          default: "mail"
        uid_member_value_property_name:
          type: "string"
          default: "uid"
        use_auto_discovery:
          type: "boolean"
          description: "If `true`, Active Directory Domain Controllers (DCs) and Active Directory domains are automatically discovered. Queries extend beyond the joined domain to all domains in the forest. If `false`, queries are restricted to the joined domain and URIs must be provided in `urls`."
        use_ldaps:
          type: "boolean"
          description: "Specifies whether to use LDAPS for auto-discovery."
        is_vms_auth_provider:
          type: boolean
          default: false
          description: "Specifies whether the LDAP is to be used for VMS authentication. There can be only two LDAP configurations that can be used for VMS authentication: one with Active Directory and the other without Active Directory."
        query_posix_attributes_from_gc:
          type: boolean
          default: false
          description: "If `true`, users/groups from non-joined domain POSIX attributes are supported. If `false`, POSIX attributes of users/groups from non-joined domain are not supported."
    S3LifeCycleRule:
      type: "object"
      properties:
        id:
          type: "integer"
          description: ""
        name:
          type: "string"
          description: "A unique name."
        guid:
          type: "string"
          description: ""
        enabled:
          type: "boolean"
        prefix:
          type: "string"
          description: "Defines a scope of elements (objects, files or directories) by prefix. All objects with keys that begin with the specified prefix are included in the scope. In file and directory nomenclature, a prefix is a file and/or directory path within the view that can include part of the file or directory name. For example, sales/jan would include the file sales/january and the directory sales/jan/week1/. No characters are handled as wildcards."
        min_size:
          type: "integer"
          format: "int64"
          description: "The minimum size of the object."
        max_size:
          type: "integer"
          format: "int64"
          description: "The maximum size of the object."
        expiration_days:
          type: "integer"
          description: "The number of days from creation until an object expires."
        expiration_date:
          type: "string"
          description: "The expiration date of the object."
        expired_obj_delete_marker:
          type: "boolean"
          description: "If `true`, removes expired object delete markers."
        noncurrent_days:
          type: "integer"
          description: "Number of days after which objects become non-current"
        newer_noncurrent_versions:
          type: "integer"
          description: "The number of newer versions to retain."
        abort_mpu_days_after_initiation:
          type: "integer"
          description: "The number of days until expiration after an incomplete multipart upload."
        view_path:
          type: "string"
          description: "The path of the view to which the lifecycle rule applies."
        view_id:
          type: "integer"
          description: "The ID of the view to which the lifecycle rule applies."
    ActiveDirectory:
      type: "object"
      properties:
        id:
          type: "integer"
          description: ""
        guid:
          type: "string"
          description: ""          
        machine_account_name:
          type: "string"
          description: ""
        organizational_unit:
          type: "string"
          description: ""
        ldap_id:
          type: integer
          format: "int64" 
    QOSPolicy:
      type: object
      properties:
        id:
          type: integer
        guid:
          type: string
          description: "QoS policy GUID."
        name:
          type: string
        mode:
          type: string
          enum: [STATIC, USED_CAPACITY, PROVISIONED_CAPACITY]
          description: "QoS provisioning mode."
        io_size_bytes:
          type: "integer"
          format: "int64"
          description: "Sets the size of IO for static and capacity limit definitions. The number of IOs per request is obtained by dividing the request size by IO size. Default: 64K. Recommended range: 4K - 1M"
        static_limits:
          $ref: '#/components/schemas/QosStaticLimits'
          description: 'Performance limits per view. Maximum limits define maximum provisioning in the absence of resource contention. Valid values: 0-4294967296. 0 means unlimited.'
        capacity_limits:
          $ref: '#/components/schemas/QosDynamicLimits'
          description: 'Performance limits per unit of either used logical capacity or provisioned capacity, depending on the mode. Units are stated per limit. Valid values: 0-4294967296. 0 means unlimited.'
    QosStaticLimits:
      type: object
      properties:
        min_reads_bw_mbps:
          type: integer
          format: "int64"
          description: "Minimum performance to provide when there is resource contention."
        max_reads_bw_mbps:
          type: integer
          format: "int64"
          description: "Maximum performance to provide when there is no resource contention."
        min_writes_bw_mbps:
          type: integer
          format: "int64"
          description: "Minimum performance to provide when there is resource contention."
        max_writes_bw_mbps:
          type: integer
          format: "int64"
          description: "Maximum performance to provide when there is no resource contention."
        min_reads_iops:
          type: integer
          format: "int64"
          description: "Minimum performance to provide when there is resource contention."
        max_reads_iops:
          type: integer
          format: "int64"
          description: "Maximum performance to provide when there is no resource contention."
        min_writes_iops:
          type: integer
          format: "int64"
          description: "Minimum performance to provide when there is resource contention."
        max_writes_iops:
          type: integer
          format: "int64"
          description: "Maximum performance to provide when there is no resource contention."
    QosDynamicLimits:
      type: object
      properties:
        max_reads_bw_mbps_per_gb_capacity:
          type: integer
          format: "int64"
          description: "Maximum read bandwidth (in MB/s) per GB to provide when there is no resource contention."
        max_writes_bw_mbps_per_gb_capacity:
          type: integer
          format: "int64"
          description: "Maximum write bandwidth (in MB/s) per GB to provide when there is no resource contention."
        max_reads_iops_per_gb_capacity:
          type: integer
          format: "int64"
          description: "Maximum read IOPS per GB to provide when there is no resource contention."
        max_writes_iops_per_gb_capacity:
          type: integer
          format: "int64"
          description: "Maximum write IOPS per GB to provide when there is no resource contention."
    S3Policy:
      required:
      - "enabled"
      type: "object"
      properties:
        id:
          type: "integer"
          description: ""
        guid:
          type: "string"
          description: "GUID"
        name:
          type: "string"
          description: ""
        policy:
          type: "string"
          description: ""
        users:
          type: "array"
          items:
            type: "string"
          description: ""
        groups:
          type: "array"
          items:
            type: "string"
          description: ""
        is_replicated:
          type: "boolean"
        enabled:
          type: "boolean"
        tenant_id:
          type: "integer"
          format: "int64"
    Cnode:
      type: "object"
      required:
      - "name"
      properties:
        id:
          type: "integer"
          description: ""
        guid:
          type: "string"
          description: ""
        name:
          type: "string"
          description: ""
        new_name:
          type: "string"
          description: ""
        ip:
          type: "string"
          description: "The IP address being used, bond of `ip1` and `ip2`."
        ip1:
          type: "string"
          description: "First internal IP address."
        ip2:
          type: "string"
          description: "Second internal IP address."
        ipv6:
          type: "string"
          description: "External IPv6 address."
        host_label:
          type: "string"
          description: "Host label, used to label the  container, e.g. 11.0.0.1-4000."
        sn:
          type: "string"
          description: "Host serial number."
        state:
          type: "string"
          description: ""
        display_state:
          type: "string"
          description: ""
        led_status:
          type: "string"
          description: ""
        platform_rdma_port:
          type: "integer"
          description: ""
        platform_tcp_port:
          type: "integer"
          description: ""
        data_rdma_port:
          type: "integer"
          description: ""
        data_tcp_port:
          type: "integer"
          description: ""
        enabled:
          type: "boolean"
          description: "Sets the CNode to be enabled or disabled."
        is_mgmt:
          type: "boolean"
          description: "Specifies whether the CNode is running VMS."
        cbox:
          type: "string"
          description: "Parent CBox."
        cbox_uid:
          type: "string"
          description: "UID of the parent CBox."
        cbox_id:
          type: "integer"
          description: "ID of the parent CBox."
        cluster:
          type: "string"
          description: "Parent cluster."
          x-cli-header: "Cluster"
        os_version:
          type: "string"
          description: "Node OS version."
        bmc_fw_version:
          type: "string"
          description: "BMC FW version."
        vms_preferred:
          type: "boolean"
          description: "VMS preferred CNode."
        url:
          type: "string"
          description: ""
        mgmt_ip:
          type: "string"
          description: "Management IP."
        hostname:
          type: "string"
          description: "Host Name."
    ProtectedPath:
      type: "object"
      properties:
        id:
          type: "integer"
          description: ""
        name:
          type: "string"
          description: ""
        guid:
          type: "string"
          description: "GUID"
        protection_policy_id:
          type: "integer"
          description: "Protection policy ID."
        source_dir:
          type: "string"
          description: "Path to replicate."
        target_exported_dir:
          type: "string"
          description: "The destination path to replicate to on the remote cluster."
        tenant_id:
          type: "integer"
          description: "Local tenant ID."
        remote_tenant_guid:
          type: "string"
          description: "Remote tenant GUID."
        target_id:
          type: "integer"
          description: "Remote target object ID."
        capabilities:
          type: "string"
          description: "Available replication capabilities. Supported only for clusters v5.1 and later."
          enum: [ASYNC_REPLICATION]
        enabled:
          type: "boolean"
          description: "Specifies whether the protected path is enabled."
    Snapshot:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the snapshot."
        guid:
          type: "string"
          description: "The unique GUID of the snapshot."
        expiration_time:
          type: "string"
          description: "The snapshot's expiration time."
        name:
          type: "string"
          description: "The name of the snapshot."
        path:
          type: "string"
          description: "The path to make snapshot from."
        tenant_id:
          type: "int"
          description: "The tenant ID to use."
        indestructible:
          type: "boolean"
          description: "If `true`, the snapshot is indestructable."
    GlobalLocalSnapshot:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the global snapshot."
        guid:
          type: "string"
          description: "The unique GUID of the global snapshot."
        name:
          type: "string"
          description: "The name of the snapshot."
        loanee_tenant_id:
          type: "int"
          description: "The tenant ID on the destination peer."
        loanee_root_path:
          type: "string"
          description: "The path where to store the snapshot on the destination peer."
        loanee_snapshot_id:
          type: "int"
          description: "The ID of the local snapshot."
        enabled:
          type: "boolean"
          description: "Sets the snapshot to be enabled or disabled."
          default: true
        owner_tenant:
          type: "object"
          $ref: "#/components/schemas/GlobalSnapshotOwnerTenant"          
    GlobalSnapshot:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the global snapshot."
        guid:
          type: "string"
          description: "The unique GUID of the global snapshot."
        name:
          type: "string"
          description: "The name of the snapshot."
        loanee_tenant_id:
          type: "int"
          description: "The tenant ID on the destination peer."
        loanee_root_path:
          type: "string"
          description: "The path where to store the snapshot on the destination peer."
        remote_target_id:
          type: "int"
          description: "The remote replication peering ID."
        remote_target_guid:
          type: "string"
          description: "The remote replication peering GUID."
        remote_target_path:
          type: "string"
          description: "The path on the remote cluster."
        enabled:
          type: "boolean"
          description: "Sets the snapshot to be enabled or disabled."
        owner_root_snapshot:
          type: "object"
          $ref: "#/components/schemas/GlobalSnapshotOwnerRootSnapshot"
        owner_tenant:
          type: "object"
          $ref: "#/components/schemas/GlobalSnapshotOwnerTenant"          
    GlobalSnapshotOwnerRootSnapshot:
      type: "object"
      properties:
        clone_id:
          type: "int64"
          description: "The ID of the clone."
        name:
          type: "string"
          description: "Remote clone name,"
        parent_handle_ehandle:
          type: "string"
          description: "The remote handle (inode)."
    GlobalSnapshotOwnerTenant:
      type: "object"
      properties:
        name:
          type: "string"
          description: "The name of the remote tenant."
        guid:
          type: "string"
          description: "The remote tenant GUID."
    ReplicationPeers:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the replication peer configuration."
        guid:
          type: "string"
          description: "The unique GUID of the replication peer configuration."
        name:
          type: "string"
          description: "The name of the replication peer configuration."
        url:
          type: "string"
          description: "Direct URL of the replication peer configuration."
        leading_vip:
          type: "string"
          description: "The virtual IP pool provided for the replication peer configuration."  
        remote_vip_range:
          type: "string"
          description: "The range of virtual IPs that were reported by the peer."
        version:
          type: "string"
          description: "The version of the source."
        remote_version:
          type: "string"
          description: "The version of the remote peer."
        is_local:
          type: "boolean"
          description: "Specifies whether the source of the replication is local (this host is the source)."
        peer_name:
          type: "string"
          description: "The name of the peer cluster."
        secure_mode:
          type: "string"
          description: "If true, the connection is secure."
        pool_id:
          type: "int"
          description: "The ID of the replication virtual IP pool."
    ProtectionPolicy:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the protection policy."
        guid:
          type: "string"
          description: "The unique GUID of the protection policy."
        name:
          type: "string"
          description: "The name of the protection policy."  
        url:
          type: "string"
          description: "Direct URL of the protection policy."
        target_name:
          type: "string"
          description: "The name of the destination peer."
        target_object_id:
          type: "int"
          description: "The ID of the destination peer."
        prefix:
          type: "string"
          description: "The prefix to be given to the replicated data."
        clone_type:
          type: "string"
          description: "The type the replication."
          enum: [NATIVE_REPLICATION]
        frames:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/ProtectionPolicySchedule"
            description: "A schedule for creating a snapshot"
          description: "A list of snapshots schedules."
        indestructible:
          type: "boolean"
          description: "If true, the snapshot is  indestructable."
    ProtectionPolicySchedule:
      type: "object"
      properties:      
        every:
          type: "string"
          description: "How often to create a snapshot. The format is <integer><time period>. The time period can be D - Days, W - Weeks, s - Seconds, m - Minutes, H - Hours, M - Months, Y - Years. For example: 1D = 1 Day"
        start-at:
          type: "string"
          description: "Replication start date and time."
        keep-local:
          type: "string"
          description: "For how long to keep the local copy. The format is <integer><time period>. The time period can be D - Days, W - Weeks, s - Seconds, m - Minutes, H - Hours, M - Months, Y - Years. For example: 1D = 1 Day"
        keep-remote:
          type: "string"
          description: "For how long to keep the copy on the remote peer. The format is <integer><time period>. The time period can be D - Days, W - Weeks, s - Seconds, m - Minutes, H - Hours, M - Months, Y - Years. For example: 1D = 1 Day"
    S3replicationPeers:
      required:
      - "type"
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the S3 replication peer configuration."
        guid:
          type: "string"
          description: "The unique GUID of the S3 replication peer configuration."
        name:
          type: "string"
          description: "The name of the S3 replication peer configuration."  
        url:
          type: "string"
          description: "Direct URL of the S3 replication peer configuration."
        bucket_name:
          type: "string"
          description: "The name of the peer bucket to replicate to."
        http_protocol:
          type: "string"
          description: "The HTTP protocol used (HTTP or HTTPS)."
        type:
          type: "string"
          description: "The type of the peer bucket: CUSTOM_S3/AWS_S3"
          enum: [CUSTOM_S3,AWS_S3]
        proxies:
          type: "array"
          items:
            type: "string"
            description: "The HTTP proxy URL."
          description: "A list of HTTP proxies."
        aws_region:
          type: "string"
          description: "The AWS region of the bucket. Valid only when type is AWS_S3."
        access_key:
          type: "string"
          description: "The S3 access key."
        secret_key:
          type: "string"
          description: "The S3 secret key."
        custom_bucket_url:
          type: "string"
          description: "The S3 URL of the bucket (DNS name/IP), used only when using CUSTOM_S3."      
    ActiveDirectory2:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "The unique ID of the resource."
        guid:
          type: "string"
          description: "The unique GUID of the resource."          
        machine_account_name:
          type: "string"
          description: "The name of the computer object/machine account to add. Recommended to use the name of the cluster."
        organizational_unit:
          type: "string"
          description: "Organizational unit within Active Directory where the cluster's machine account will be created. If left empty, defaults to Computers OU."
        smb_allowed:
          type: "boolean"
          default: true
          description: "Indicates if Active Directory is allowed for SMB."
        ntlm_enabled:
          type: "boolean"
          default: true
          description: "Enables or disables support of NTLM authentication for SMB."
        use_auto_discovery:
          type: "boolean"
          default: false
          description: "If `true`, Active Directory Domain Controllers (DCs) and Active Directory domains are automatically discovered. Queries extend beyond the joined domain to all domains in the forest. If `false`, queries are restricted to the joined domain and DCs must be provided in the URLs field."
        use_ldaps:
          type: "boolean"
          default: false
          description: "Specifies whether to use LDAPS for auto-discovery. To enable use of LDAPS, also set `use_auto_discovery` to `true`."
        port:
          type: "int"
          default: 389
          description: "Which port to use."
        binddn:
          type: "string"
          description: "Distinguished name of the Active Directory superuser."
        searchbase:
          type: "string"
          description: "The base DN is the starting point that the Active Directory provider uses when searching for users and groups. If a group base DN is configured, it will be used instead of the base DN (for groups only)."
        domain_name:
          type: "string"
          description: "FQDN of the domain."
        method:
          type: "string"
          enum: [simple,anonymous,sasl]
          default: "simple"
          description: "Bind authentication method."
        query_groups_mode:
          type: "string"
          enum: [COMPATIBLE,NONE,RFC2307BIS,RFC2307]
          default: "COMPATIBLE"
          description: "Query group mode."
        posix_attributes_source:
          type: "string"
          default: "JOINED_DOMAIN"
          description: "Defines which domains POSIX attributes will be supported from."
        use_tls:
          type: "boolean"
          default: false
          description: "Set to `true` to enable use of TLS to secure communication between the VAST cluster and the Active Directory server."
        tls_certificate:
          type: "string"
          description: "TLS certificate to use for verifying the remote Active Directory server’s TLS certificate."
        reverse_lookup:
          type: "boolean"
          default: false
          description: "Specifies whether to resolve Active Directory netgroups into hostnames."
        gid_number:
          type: "string"
          description: "The attribute of a user entry on the Active Directory server that contains the UID number, if different from `uidNumber`. Often, when binding the VAST cluster to Active Directory, this does not need to be set."
        use_multi_forest:
          type: "boolean"
          default: false
          description: "Allows or prohibits access for users from trusted domains on other forests."
        uid:
          type: "string"
          description: "The attribute of a user entry on the Active Directory server that contains the user name, if different from `uid`. When binding the VAST cluster to Active Directory, you may need to set this to `sAMAccountname`."
        uid_number:
          type: "string"
          description: "The attribute of a user entry on the Active Directory server that contains the UID number, if different from `uidNumber`. Often when binding the VAST cluster to Active Directory, this does not need to be set."
        match_user:
          type: "string"
          description: "The attribute to use when querying a provider for a user that matches a user that has already been retrieved from another provider. A user entry that contains a matching value in this attribute will be considered the same user as the user previously retrieved."
        uid_member_value_property_name:
          type: "string"
          description: "Specifies the attribute which represents the value of the Active Directory group’s member property."
        uid_member:
          type: "string"
          description: "The attribute of a group entry on the Active Directory server that contains names of group members, if different from `memberUid`. When binding the VAST cluster to Active Directory, you may need to set this to `memberUID`."
        posix_account:
          type: "string"
          description: "The object class that defines a user entry on the AD server, if different from ‘posixAccount’. When binding VAST Cluster to AD, set this parameter to ‘user’ in order for authorization to work properly."
        posix_group:
          type: "string"
          description: "The object class that defines a user entry on the Active Directory server, if different from `posixAccount`. When binding the VAST cluster to Active Directory, set this parameter to `user` to ensure that authorization works properly."
        username_property_name:
          type: "string"
          description: "The attribute to use for querying users in VMS user-initated user queries. Default is `name`. Sometimes it can be set to `cn`."
        user_login_name:
          type: "string"
          description: "Specifies the attribute used to query Active Directory for the user login name in NFS ID mapping."
        group_login_name:
          type: "string"
          description: "Specifies the attribute used to query Active Directory for the group login name in NFS ID mapping."
        mail_property_name:
          type: "string"
          description: "Specifies the attribute to use for the user’s email address."
        is_vms_auth_provider:
          type: "boolean"
          default: false
          description: "Enables or disables use of the Active Directory for VMS authentication. Two Active Directory configurations per cluster can be used for VMS authentication: one with Active Directory and the other without Active Directory."
        bindpw:
          type: "string"
          description: "The password used with the Bind DN to authenticate to the Active Directory server."
        urls:
          type: "array"
          items:
            type: "string"
          description: "A comma-separated list of URIs of Active Directory servers in the format `SCHEME://ADDRESS`. The order of listing defines the priority order. The URI with the highest priority that has a good health status is used."
    ProtocolsAudit:
      type: "object"
      properties:
        create_delete_files_dirs_objects:
          type: "boolean"
          description: "Enables or disables logging of operations that create or delete files, directories, or objects."
          default: false
        log_deleted_files_dirs:
          type: "boolean"
          description: "Enables or disables logging of deleted files and directories."
          default: false
        log_full_path:
          type: "boolean"
          description: "If `true` (default), enables logging of full Element Store path to the requested resource. May affect performance. If `false`, the view path is recorded."
          default: true
        log_username:
          type: "boolean"
          description: "Enables or disables (default) logging of username of the requesting user."
          default: false
        log_hostname:
          type: "boolean"
          description: "Enables or disables logging of the accessing host name."
        modify_data_md:
          type: "boolean"
          description: "Enables or disables logging of operations that modify metadata."
          default: false
        read_data:
          type: "boolean"
          description: "Enables or disables logging of operations that read data."
          default: false
        modify_data:
          type: "boolean"
          default: false
        read_data_md:
          type: "boolean"
          default: false
    PermissionsPerVipPool:
      type: "object"
      properties:
        vippool_id:
          type: "string"
          description: "The ID of the virtual IP pool."
        vippool_permissions:
          type: "string"
          description: "Permissions for the virtual IP pool."
          default: "RW"
          enum: [RW,RO]
    Role:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the role."
        name:
          type: "string"
          description: "The unique name of the role."
        permissions_list:
          type: "array"
          items:
            type: "string"
          description: "A list of permissions granted."
          enum: [ create_support, create_settings, create_security, create_monitoring, create_logical, create_hardware, create_events, create_database, create_applications, view_support, view_settings, view_security, view_monitoring, view_logical, view_hardware, view_events, view_applications, view_database, edit_support, edit_settings, edit_security, edit_monitoring, edit_logical, edit_hardware, edit_events, edit_database, edit_applications, delete_support, delete_settings, delete_security, delete_monitoring, delete_logical, delete_hardware, delete_events, delete_applications, delete_database ]
        permissions:
            type: "array"
            items:
              type: "string"
            description: "A list of granted permissions returned from the VMS."
        ldap_groups:
          type: "array"
          items:
            type: "string"
          description: "LDAP group(s) associated with the role. Members of the specified groups on the connected LDAP/Active Directory provider can access VMS and are granted whichever permissions are included in the role. A group can be associated with multiple roles."
        tenants:
          type: "array"
          items:
            type: "integer"
            format: "int64"
          description: "A list of tenants the role is associated with."
        is_admin:
          type: "boolean"
          description: "If true, the role is an admin role."
        is_default:
          type: "boolean"
          description: "If true, the role is a default role."
    Manager:
      type: "object"
      properties:
        id:
          type: "int64"
          description: "The unique ID of the manager."
        username:
          type: "string"
          description: "The username of the manager."
        password:
          type: "string"
          description: "The password of the manager."
        first_name:
          type: "string"
          description: "The manager's first name."
        last_name:
          type: "string"
          description: "The manager's last name."
        permissions_list:
          type: "array"
          items:
            type: "string"
          description: "A list of permissions granted."
          enum: [ create_support, create_settings, create_security, create_monitoring, create_logical, create_hardware, create_events, create_database, create_applications, view_support, view_settings, view_security, view_monitoring, view_logical, view_hardware, view_events, view_applications, view_database, edit_support, edit_settings, edit_security, edit_monitoring, edit_logical, edit_hardware, edit_events, edit_database, edit_applications, delete_support, delete_settings, delete_security, delete_monitoring, delete_logical, delete_hardware, delete_events, delete_applications, delete_database ]
        roles:
          type: "array"
          items:
            type: "int"
            format: "int64"
          description: "A list of role IDs."
        password_expiration_disabled:
          type: "boolean"
          description: "If true, the password does not expire."
        is_temporary_password:
          type: "boolean"
          description: "If true, a prompt to replace the password will be displayed next time the user logs in."
        permissions:
            type: "array"
            items:
              type: "string"
            description: "A list of granted permissions returned from the VMS."
