/*
 * VAST Data API
 *
 * An API document representing VAST Data API
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type Tenant struct {
	// The unique ID of the tenant.
	Id int32 `json:"id,omitempty"`
	// The unique GUID of the tenant.
	Guid string `json:"guid,omitempty"`
	// The unique name of the tenant.
	Name string `json:"name,omitempty"`
	// Enables or disables SMB privileged user.
	UseSmbPrivilegedUser bool `json:"use_smb_privileged_user,omitempty"`
	// An optional custom username for the SMB privileged user. If not set, the SMB privileged user name is 'vastadmin'.
	SmbPrivilegedUserName string `json:"smb_privileged_user_name,omitempty"`
	// Enables or disables SMB privileged user group.
	UseSmbPrivilegedGroup bool `json:"use_smb_privileged_group,omitempty"`
	// An optional custom SID to specify a non-default SMB privileged group. If not set, the SMB privileged group is the Backup Operators domain group.
	SmbPrivilegedGroupSid string `json:"smb_privileged_group_sid,omitempty"`
	// If 'true', the SMB privileged user group has read and write control access. Members of the group can perform backup and restore operations on all files and directories, without requiring read or write access to the specific files and directories. If 'false', the privileged group has read-only access.
	SmbPrivilegedGroupFullAccess bool `json:"smb_privileged_group_full_access,omitempty"`
	// An optional custom name to specify a non-default privileged group. If not set, the privileged group is the Backup Operators domain group.
	SmbAdministratorsGroupName string `json:"smb_administrators_group_name,omitempty"`
	// Default share-level permissions for others.
	DefaultOthersShareLevelPerm string `json:"default_others_share_level_perm,omitempty"`
	// A GID with permissions to the trash folder.
	TrashGid int32 `json:"trash_gid,omitempty"`
	// An array of source IP ranges to allow for the tenant.
	ClientIpRanges [][]string `json:"client_ip_ranges,omitempty"`
	// The POSIX primary provider type.
	PosixPrimaryProvider string `json:"posix_primary_provider,omitempty"`
	// The ID of the Active Directory provider.
	AdProviderId int32 `json:"ad_provider_id,omitempty"`
	// The ID of the OpenLDAP provider specified separately by the user.
	LdapProviderId int32 `json:"ldap_provider_id,omitempty"`
	// The NIS provider ID.
	NisProviderId int32 `json:"nis_provider_id,omitempty"`
	// The unique ID of the tenant's encryption group.
	EncryptionCrn string `json:"encryption_crn,omitempty"`
	// Enables or disables NFSv4.2.
	IsNfsv42Supported bool `json:"is_nfsv42_supported,omitempty"`
	// Allows or prohibits IO from users whose Active Directory accounts are locked out by lockout policies due to unsuccessful login attempts.
	AllowLockedUsers bool `json:"allow_locked_users,omitempty"`
	// Allows or prohibits IO from users whose Active Directory accounts are explicitly disabled.
	AllowDisabledUsers bool `json:"allow_disabled_users,omitempty"`
	// Enables or disables use of native SMB authentication.
	UseSmbNative bool `json:"use_smb_native,omitempty"`
	// An array of names of virtual IP pools attached to the tenant.
	VippoolNames []string `json:"vippool_names,omitempty"`
	// An array of IDs of virtual IP pools attached to the tenant.
	VippoolIds []int64 `json:"vippool_ids,omitempty"`
}
