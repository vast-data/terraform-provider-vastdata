/*
 * VAST Data API
 *
 * A API document representing VAST Data API
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type ViewPolicy struct {
	// The unique ID of the view policy.
	Id int32 `json:"id,omitempty"`
	// The unique GUID of the view policy.
	Guid string `json:"guid,omitempty"`
	// The unique name of the view policy.
	Name string `json:"name"`
	// Determines the way a file inherits GID.
	GidInheritance string `json:"gid_inheritance,omitempty"`
	// Security flavor, which determines how file and directory permissions are applied in multiprotocol views.
	Flavor string `json:"flavor,omitempty"`
	// Controls which protocols can set file permissions when the security flavor is set to 'MIXED_LAST_WINS'. Note that with 'MIXED_LAST_WINS', NFSv3 access is unaffected by this option.
	AccessFlavor string `json:"access_flavor,omitempty"`
	// How to determine the maximum allowed path length.
	PathLength string `json:"path_length,omitempty"`
	// How to determine the allowed characters in a path.
	AllowedCharacters string `json:"allowed_characters,omitempty"`
	Use32bitFileid    bool   `json:"use_32bit_fileid,omitempty"`
	ExposeIdInFsid    bool   `json:"expose_id_in_fsid,omitempty"`
	// Enables or disables use of the configured authentication provider(s) to enforce group permissions. If set to 'true' without specifing 'auth_source', the 'auth_source' is set to 'PROVIDERS'. If set to 'false', the 'auth_source' is set to RPC. Due to the nature of Terraform, simply changing 'use_auth_provider' from 'false' to 'true' or the other way around will not change the value of the 'auth_source' parameter because Terrafrom will keep holding the previous value. Therefore it is advisable to always specify the value of 'auth_source'.
	UseAuthProvider bool `json:"use_auth_provider,omitempty"`
	// The source of authentication.
	AuthSource string `json:"auth_source,omitempty"`
	// Hosts with NFS read/write permissions.
	ReadWrite []string `json:"read_write,omitempty"`
	// Hosts with NFS read-only permissions.
	ReadOnly []string `json:"read_only,omitempty"`
	// Hosts with NFS read/write permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'nfs_read_write' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	NfsReadWrite []string `json:"nfs_read_write,omitempty"`
	// Hosts with NFS read-only permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'nfs_read_only' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	NfsReadOnly []string `json:"nfs_read_only,omitempty"`
	// Hosts with SMB read/write permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'smb_read_write' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	SmbReadWrite []string `json:"smb_read_write,omitempty"`
	// Hosts with SMB read-only permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'smb_read_only' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	SmbReadOnly []string `json:"smb_read_only,omitempty"`
	// Hosts with S3 read/write permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 's3_read_write' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	S3ReadWrite []string `json:"s3_read_write,omitempty"`
	// Hosts with S3 read-only permissions. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 's3_read_only' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	S3ReadOnly []string `json:"s3_read_only,omitempty"`
	// Hosts with trash folder permissions.
	TrashAccess []string `json:"trash_access,omitempty"`
	// Enables or disables POSIX ACL.
	NfsPosixAcl bool `json:"nfs_posix_acl,omitempty"`
	// When using SMB, enables or disables use of open permissions for files.
	NfsReturnOpenPermissions bool `json:"nfs_return_open_permissions,omitempty"`
	// Hosts with the no-squash policy. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'nfs_no_squash' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	NfsNoSquash []string `json:"nfs_no_squash,omitempty"`
	// Hosts with the root squash policy. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'nfs_root_squash' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	NfsRootSquash []string `json:"nfs_root_squash,omitempty"`
	// Hosts with the all-squash policy. When creating a new view policy, if this value is not set, then an empty list is sent to the VAST cluster, resulting in an empty list of addresses. However, during an update, if 'nfs_all_squash' is removed from the resource, nothing is changed to preserve Terraform default behavior in such cases. If you need to change the value to an empty list, specify this parameter and set it to [].
	NfsAllSquash []string `json:"nfs_all_squash,omitempty"`
	// Hosts with full permissions
	S3BucketFullControl string `json:"s3_bucket_full_control,omitempty"`
	// Hosts with full permissions
	S3BucketListing string `json:"s3_bucket_listing,omitempty"`
	// Hosts with full permissions
	S3BucketRead string `json:"s3_bucket_read,omitempty"`
	// Hosts with full permissions
	S3BucketReadAcp string `json:"s3_bucket_read_acp,omitempty"`
	// Hosts with full permissions
	S3BucketWrite string `json:"s3_bucket_write,omitempty"`
	// Hosts with full permissions
	S3BucketWriteAcp string `json:"s3_bucket_write_acp,omitempty"`
	// Hosts with full permissions
	S3ObjectFullControl string `json:"s3_object_full_control,omitempty"`
	// Hosts with full permissions
	S3ObjectRead string `json:"s3_object_read,omitempty"`
	// Hosts with full permissions
	S3ObjectReadAcp string `json:"s3_object_read_acp,omitempty"`
	// Hosts with full permissions
	S3ObjectWrite string `json:"s3_object_write,omitempty"`
	// Hosts with full permissions
	S3ObjectWriteAcp string `json:"s3_object_write_acp,omitempty"`
	// Default UNIX-type permissions on a new file.
	SmbFileMode int32 `json:"smb_file_mode,omitempty"`
	// Default UNIX-type permissions on a new folder.
	SmbDirectoryMode int32 `json:"smb_directory_mode,omitempty"`
	// Default UNIX-type permissions on a new file.
	SmbFileModePadded string `json:"smb_file_mode_padded,omitempty"`
	// Default UNIX-type permissions on a new folder.
	SmbDirectoryModePadded string `json:"smb_directory_mode_padded,omitempty"`
	// Parent cluster.
	Cluster string `json:"cluster,omitempty"`
	// Parent cluster ID.
	ClusterId int32 `json:"cluster_id,omitempty"`
	// Tenant ID.
	TenantId int32 `json:"tenant_id,omitempty"`
	// Tenant name.
	TenantName string `json:"tenant_name,omitempty"`
	Url        string `json:"url,omitempty"`
	// Frequency for updating the atime attribute of NFS files. atime is updated on read operations if the difference between the current time and the file's atime value is greater than the atime frequency. Specify as time in seconds.
	AtimeFrequency string `json:"atime_frequency,omitempty"`
	// A comma-separated list of virtual IP pool IDs. This attribute conflicts with 'vippool_permissions' and cannot be supplied together with it. Also, due to the lack of ability to configure virtual IP pool permissions using this attibute, the pool permissions are always defined as read/write.
	VipPools []int32 `json:"vip_pools,omitempty"`
	// NFSv4.1 minimal protection level.
	NfsMinimalProtectionLevel string `json:"nfs_minimal_protection_level,omitempty"`
	// A list of usernames for bucket listing permissions.
	S3Visibility []string `json:"s3_visibility,omitempty"`
	// A list of group names for bucket listing permissions.
	S3VisibilityGroups []string `json:"s3_visibility_groups,omitempty"`
	// Enables or disables returning Security IDs (SIDs) in Apple compatible representation.
	AppleSid bool `json:"apple_sid,omitempty"`
	// Protocols to audit.
	Protocols []string `json:"protocols,omitempty"`
	// If 'true', logs operations that create or delete files, directories, or objects.
	DataCreateDelete bool `json:"data_create_delete,omitempty"`
	// If 'true', logs operations that modify data or metadata.
	DataModify bool `json:"data_modify,omitempty"`
	// If 'true', logs operations that read data or metadata.
	DataRead bool `json:"data_read,omitempty"`
	// Enables or disables logging of full Element Store path to the requested resource.
	LogFullPath bool `json:"log_full_path,omitempty"`
	// Enables or disables logging of the accessing host name.
	LogHostname bool `json:"log_hostname,omitempty"`
	// Enables or disables logging of username of the requesting user. Disabled by default.
	LogUsername bool `json:"log_username,omitempty"`
	// Enables or disables logging of deleted files and directories from the trash folder.
	LogDeleted    bool         `json:"log_deleted,omitempty"`
	RemoteMapping *interface{} `json:"remote_mapping,omitempty"`
	// The total number of views associated with this view policy.
	CountViews int32 `json:"count_views,omitempty"`
	// Specifies whether to make the .snapshot directory accessible in subdirectories of the view.
	EnableSnapshotLookup bool `json:"enable_snapshot_lookup,omitempty"`
	// Specifies whether to make the .snapshot directory visible in subdirectories of the view.
	EnableListingOfSnapshotDir bool `json:"enable_listing_of_snapshot_dir,omitempty"`
	// Allows or prohibits object names that contain “//“ or “/../“ and are incompatible with other protocols.
	S3SpecialCharsSupport bool `json:"s3_special_chars_support,omitempty"`
	// If 'true', the SMB share exposed by the view is set as continuously available, which allows SMBv3 clients to request use of persistent file handles and keep their connections to this share in case of a failover event.
	SmbIsCa bool `json:"smb_is_ca,omitempty"`
	// If 'true', forces case insensitivity for NFSv3 and NFSv4.
	NfsCaseInsensitive bool `json:"nfs_case_insensitive,omitempty"`
	// Specifies whether to make the .snapshot directory visible in subdirectories of the view.
	EnableAccessToSnapshotDirInSubdirs bool `json:"enable_access_to_snapshot_dir_in_subdirs,omitempty"`
	// Specifies whether to make the .snapshot directory visible in subdirectories of the view.
	EnableVisibilityOfSnapshotDir bool `json:"enable_visibility_of_snapshot_dir,omitempty"`
	// If 'true', NFSv3 and NFSv4.1 client mounts are accepted only if they are TLS-encrypted. Use only with 'nfs_minimal_protection_level' set to 'System' or 'None'.
	NfsEnforceTls  bool            `json:"nfs_enforce_tls,omitempty"`
	ProtocolsAudit *ProtocolsAudit `json:"protocols_audit,omitempty"`
	// A list of virtual IP pool permissions. This attribute conflicts with 'vip_pools' and cannot be supplied together with it.
	VippoolPermissions []PermissionsPerVipPool `json:"vippool_permissions,omitempty"`
}
