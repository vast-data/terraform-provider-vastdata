/*
 * VastData API
 *
 * A API document representing VastData API
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type ActiveDirectory2 struct {
	// A uniqe ID given to this resource
	Id int32 `json:"id,omitempty"`
	// A uniqe ID given to this resource
	Guid string `json:"guid,omitempty"`
	// Name of the computer object/machine account to add. Recommended to be the name of the cluster
	MachineAccountName string `json:"machine_account_name,omitempty"`
	// Organizational Unit within AD where the Cluster Machine account will be created. If left empty, it will go into default Computers OU
	OrganizationalUnit string `json:"organizational_unit,omitempty"`
	// Indicates if AD is allowed for SMB.
	SmbAllowed bool `json:"smb_allowed,omitempty"`
	// Manages support of NTLM authentication method for SMB protocol.
	NtlmEnabled bool `json:"ntlm_enabled,omitempty"`
	// When enabled, Active Directory Domain Controllers (DCs) and Active Directory domains are auto discovered. Queries extend beyond the joined domain to all domains in the forest. When disabled, queries are restricted to the joined domain and DCs must be provided in the URLs field.
	UseAutoDiscovery bool `json:"use_auto_discovery,omitempty"`
	// Use LDAPS for auto-Discovery. To activate, set use_auto_discovery to true also.
	UseLdaps bool `json:"use_ldaps,omitempty"`
	// Which port to use
	Port int `json:"port,omitempty"`
	// Distinguished name of AD superuser
	Binddn string `json:"binddn,omitempty"`
	// The Base DN is the starting point the AD provider uses when searching for users and groups. If the Group Base DN is configured it will be used instead of the Base DN, for groups only
	Searchbase string `json:"searchbase,omitempty"`
	// FQDN of the domain.
	DomainName string `json:"domain_name,omitempty"`
	// Bind Authentication Method
	Method string `json:"method,omitempty"`
	// Query group mode
	QueryGroupsMode string `json:"query_groups_mode,omitempty"`
	// Defines which domains POSIX attributes will be supported from.
	PosixAttributesSource string `json:"posix_attributes_source,omitempty"`
	// Set to true to enable use of TLS to secure communication between VAST Cluster and the AD server.
	UseTls bool `json:"use_tls,omitempty"`
	// TLS certificate to use for verifying the remote AD server’s TLS certificate.
	TlsCertificate string `json:"tls_certificate,omitempty"`
	// Resolve AD netgroups into hostnames
	ReverseLookup bool `json:"reverse_lookup,omitempty"`
	// The attribute of a user entry on the AD server that contains the UID number, if different from ‘uidNumber’. Often when binding VAST Cluster to AD this does not need to be set.
	GidNumber string `json:"gid_number,omitempty"`
	// Allow access for users from trusted domains on other forests.
	UseMultiForest bool `json:"use_multi_forest,omitempty"`
	// The attribute of a user entry on the AD server that contains the user name, if different from ‘uid’ When binding VAST Cluster to AD, you may need to set this to ‘sAMAccountname’.
	Uid string `json:"uid,omitempty"`
	// The attribute of a user entry on the AD server that contains the UID number, if different from ‘uidNumber’. Often when binding VAST Cluster to AD this does not need to be set.
	UidNumber string `json:"uid_number,omitempty"`
	// The attribute to use when querying a provider for a user that matches a user that was already retrieved from another provider. A user entry that contains a matching value in this attribute will be considered the same user as the user previously retrieved.
	MatchUser string `json:"match_user,omitempty"`
	// Specifies the attribute which represents the value of the AD group’s member property.
	UidMemberValuePropertyName string `json:"uid_member_value_property_name,omitempty"`
	// The attribute of a group entry on the AD server that contains names of group members, if different from ‘memberUid’. When binding VAST Cluster to AD, you may need to set this to ‘memberUID’.
	UidMember string `json:"uid_member,omitempty"`
	// The object class that defines a user entry on the AD server, if different from ‘posixAccount’. When binding VAST Cluster to AD, set this parameter to ‘user’ in order for authorization to work properly.
	PosixAccount string `json:"posix_account,omitempty"`
	//  The object class that defines a group entry on the AD server, if different from ‘posixGroup’. When binding VAST Cluster to AD, set this parameter to ‘group’ in order for authorization to work properly.
	PosixGroup string `json:"posix_group,omitempty"`
	// The attribute to use for querying users in VMS user-initated user queries. Default is ‘name’. Sometimes set to ‘cn’
	UsernamePropertyName string `json:"username_property_name,omitempty"`
	// Specifies the attribute used to query AD for the user login name in NFS ID mapping. Applicable only with AD and NFSv4.1.
	UserLoginName string `json:"user_login_name,omitempty"`
	// Specifies the attribute used to query AD for the group login name in NFS ID mapping. Applicable only with AD and NFSv4.1.
	GroupLoginName string `json:"group_login_name,omitempty"`
	// Specifies the attribute to use for the user’s email address.
	MailPropertyName string `json:"mail_property_name,omitempty"`
	// Enables use of the AD for VMS authentication. Two AD configurations per cluster can be used for VMS authentication: one with AD and one without.
	IsVmsAuthProvider bool `json:"is_vms_auth_provider,omitempty"`
	// The password used with the Bind DN to authenticate to the AD server.
	Bindpw string `json:"bindpw,omitempty"`
	// Comma separated list of URIs of AD servers in the format SCHEME://ADDRESS. The order of listing defines the priority order. The URI with highest priority that has a good health status is used.
	Urls []string `json:"urls,omitempty"`
}
