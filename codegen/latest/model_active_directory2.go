/*
 * VAST Data API
 *
 * An API document representing VAST Data API
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type ActiveDirectory2 struct {
	// The unique ID of the resource.
	Id int32 `json:"id,omitempty"`
	// The unique GUID of the resource.
	Guid string `json:"guid,omitempty"`
	// The name of the computer object/machine account to add. Recommended to use the name of the cluster.
	MachineAccountName string `json:"machine_account_name,omitempty"`
	// Organizational unit within Active Directory where the cluster's machine account will be created. If left empty, defaults to Computers OU.
	OrganizationalUnit string `json:"organizational_unit,omitempty"`
	// Indicates if Active Directory is allowed for SMB.
	SmbAllowed bool `json:"smb_allowed,omitempty"`
	// Enables or disables support of NTLM authentication for SMB.
	NtlmEnabled bool `json:"ntlm_enabled,omitempty"`
	// If 'true', Active Directory Domain Controllers (DCs) and Active Directory domains are automatically discovered. Queries extend beyond the joined domain to all domains in the forest. If 'false', queries are restricted to the joined domain and DCs must be provided in the URLs field.
	UseAutoDiscovery bool `json:"use_auto_discovery,omitempty"`
	// Specifies whether to use LDAPS for auto-discovery. To enable use of LDAPS, also set 'use_auto_discovery' to 'true'.
	UseLdaps bool `json:"use_ldaps,omitempty"`
	// Which port to use.
	Port int `json:"port,omitempty"`
	// Distinguished name of the Active Directory superuser.
	Binddn string `json:"binddn,omitempty"`
	// The base DN is the starting point that the Active Directory provider uses when searching for users and groups. If a group base DN is configured, it will be used instead of the base DN (for groups only).
	Searchbase string `json:"searchbase,omitempty"`
	// FQDN of the domain.
	DomainName string `json:"domain_name,omitempty"`
	// Bind authentication method.
	Method string `json:"method,omitempty"`
	// Query group mode.
	QueryGroupsMode string `json:"query_groups_mode,omitempty"`
	// Defines which domains POSIX attributes will be supported from.
	PosixAttributesSource string `json:"posix_attributes_source,omitempty"`
	// Set to 'true' to enable use of TLS to secure communication between the VAST cluster and the Active Directory server.
	UseTls bool `json:"use_tls,omitempty"`
	// TLS certificate to use for verifying the remote Active Directory server’s TLS certificate.
	TlsCertificate string `json:"tls_certificate,omitempty"`
	// Specifies whether to resolve Active Directory netgroups into hostnames.
	ReverseLookup bool `json:"reverse_lookup,omitempty"`
	// The attribute of a user entry on the Active Directory server that contains the UID number, if different from 'uidNumber'. Often, when binding the VAST cluster to Active Directory, this does not need to be set.
	GidNumber string `json:"gid_number,omitempty"`
	// Allows or prohibits access for users from trusted domains on other forests.
	UseMultiForest bool `json:"use_multi_forest,omitempty"`
	// The attribute of a user entry on the Active Directory server that contains the user name, if different from 'uid'. When binding the VAST cluster to Active Directory, you may need to set this to 'sAMAccountname'.
	Uid string `json:"uid,omitempty"`
	// The attribute of a user entry on the Active Directory server that contains the UID number, if different from 'uidNumber'. Often when binding the VAST cluster to Active Directory, this does not need to be set.
	UidNumber string `json:"uid_number,omitempty"`
	// The attribute to use when querying a provider for a user that matches a user that has already been retrieved from another provider. A user entry that contains a matching value in this attribute will be considered the same user as the user previously retrieved.
	MatchUser string `json:"match_user,omitempty"`
	// Specifies the attribute which represents the value of the Active Directory group’s member property.
	UidMemberValuePropertyName string `json:"uid_member_value_property_name,omitempty"`
	// The attribute of a group entry on the Active Directory server that contains names of group members, if different from 'memberUid'. When binding the VAST cluster to Active Directory, you may need to set this to 'memberUID'.
	UidMember string `json:"uid_member,omitempty"`
	// The object class that defines a user entry on the Active Directory server, if different from 'posixAccount'. When binding the VAST cluster to Active Directory, set this parameter to 'user' to ensure that authorization works properly.
	PosixAccount string `json:"posix_account,omitempty"`
	// The object class that defines a group entry on the Active Directory server, if different from 'posixGroup'. When binding the VAST cluster to Active Directory, set this parameter to 'group' to ensure that authorization works properly.
	PosixGroup string `json:"posix_group,omitempty"`
	// The attribute to use for querying users in VMS user-initated user queries. Default is 'name'. Sometimes it can be set to 'cn'.
	UsernamePropertyName string `json:"username_property_name,omitempty"`
	// Specifies the attribute used to query Active Directory for the user login name in NFS ID mapping.
	UserLoginName string `json:"user_login_name,omitempty"`
	// Specifies the attribute used to query Active Directory for the group login name in NFS ID mapping.
	GroupLoginName string `json:"group_login_name,omitempty"`
	// Specifies the attribute to use for the user’s email address.
	MailPropertyName string `json:"mail_property_name,omitempty"`
	// Enables or disables use of the Active Directory for VMS authentication. Two Active Directory configurations per cluster can be used for VMS authentication: one with Active Directory and the other without Active Directory.
	IsVmsAuthProvider bool `json:"is_vms_auth_provider,omitempty"`
	// The password used with the Bind DN to authenticate to the Active Directory server.
	Bindpw string `json:"bindpw,omitempty"`
	// A comma-separated list of URIs of Active Directory servers in the format 'SCHEME://ADDRESS'. The order of listing defines the priority order. The URI with the highest priority that has a good health status is used.
	Urls []string `json:"urls,omitempty"`
}
