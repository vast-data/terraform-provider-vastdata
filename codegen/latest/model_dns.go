/*
 * VAST Data API
 *
 * An API document representing VAST Data API
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type Dns struct {
	// The name of the VAST DNS server configuration.
	Name string `json:"name,omitempty"`
	// The unique ID of the VAST DNS server configuration.
	Id int32 `json:"id,omitempty"`
	// The virtual IP for the DNS service. DNS requests from your external DNS server must be delegated to this IP.
	Vip string `json:"vip,omitempty"`
	// A suffix to append to domain names of each virtual IP pool. The suffix should append each domain name to form a valid FQDN for DNS requests to target.
	DomainSuffix string `json:"domain_suffix,omitempty"`
	// The IPv4 address of the gateway to the external DNS server if it is on a different subnet. Must be on the same subnet as the IP and reachable from the relevant network interface.
	VipGateway string `json:"vip_gateway,omitempty"`
	// Enables or disables the VAST DNS server configuration.
	Enabled bool `json:"enabled,omitempty"`
	// The unique GUID of the VAST DNS server configuration.
	Guid string `json:"guid,omitempty"`
	// The subnet, in the CIDR format, on which the DNS resides.
	VipSubnetCidr int32 `json:"vip_subnet_cidr,omitempty"`
	// The VLAN (optional) to enable communication with the external DNS server(s).
	VipVlan  int32   `json:"vip_vlan,omitempty"`
	CnodeIds []int32 `json:"cnode_ids,omitempty"`
	// The IPv6 address of the DNS service.
	VipIpv6 string `json:"vip_ipv6,omitempty"`
	// The subnet, in the CIDR format, on which the DNS resides. Valid values: [1..128]
	VipIpv6SubnetCidr int32 `json:"vip_ipv6_subnet_cidr,omitempty"`
	// The IPv6 address of the gateway to the external DNS server if it is on a different subnet.
	VipIpv6Gateway string `json:"vip_ipv6_gateway,omitempty"`
	// The interface that listens for DNS service delegation requests.
	NetType string `json:"net_type,omitempty"`
	// The response DNS type for invalid DNS name.
	InvalidNameResponse string `json:"invalid_name_response,omitempty"`
	// The response DNS type for invalid DNS type.
	InvalidTypeResponse string `json:"invalid_type_response,omitempty"`
	// The response TTL in seconds.
	Ttl int32 `json:"ttl,omitempty"`
}
